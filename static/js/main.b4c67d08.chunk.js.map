{"version":3,"sources":["network/lib/games.ts","styles/global.ts","App.tsx","index.tsx","network/apiClient.ts","store/IgdbContext.tsx","shared/utility.ts","components/Backdrop/styles.ts","components/Backdrop/Backdrop.tsx","components/GamePage/Hero/styles.ts","components/GamePage/Hero/Hero.tsx","components/GamePage/TwitchModal/styles.ts","components/GamePage/TwitchModal/TwitchModal.tsx","components/GamePage/Details/Details.tsx","components/GamePage/Details/CoverImage/styles.ts","components/GamePage/Details/CoverImage/CoverImage.tsx","components/GamePage/Details/Description/styles.ts","components/GamePage/Details/Description/Description.tsx","components/GamePage/Details/Description/About/styles.ts","components/GamePage/Details/Description/About/About.tsx","components/GamePage/Details/Description/AddTo/styles.ts","components/GamePage/Details/Description/AddTo/AddTo.tsx","components/GamePage/Details/Description/Share/Share.tsx","components/GamePage/Details/Rating/styles.ts","components/GamePage/Details/Rating/Rating.tsx","components/Logo/styles.ts","components/Logo/Logo.tsx","components/MainPage/MainPage.tsx","components/Navigation/NavigationSubItem.tsx","components/Navigation/Navigation.tsx","components/PersonalizeModal/styles.ts","components/PersonalizeModal/PersonalizeModal.tsx","components/PopularGame/styles.ts","components/PopularGame/PopularGame.tsx","components/Search/styles.ts","components/Search/Search.tsx","components/Sections/PopularSection/styles.ts","components/Sections/PopularSection/PopularSection.tsx","components/Sections/WelcomeSection/styles.ts","components/Sections/WelcomeSection/WelcomeSection.tsx","components/UI/Checkbox/styles.ts","components/UI/Checkbox/Checkbox.tsx","components/UI/DefaultButton/DefaultButton.tsx","containers/Header/styles.ts","containers/Header/Header.tsx","containers/Layout/Layout.tsx"],"names":["fetchPopularGamesData","query","axiosClient","get","then","responseBody","fetchGameData","endpoint","fetchGameInfo","fetchGameScreenshots","fetchGameSeries","axios","all","theme","extendTheme","colors","white","GlobalStyle","createGlobalStyle","GamePageComponent","React","lazy","App","routes","fallback","path","exact","component","MainPage","to","ReactDOM","render","IgdbContext","StrictMode","document","getElementById","response","data","setQuery","filter","create","baseURL","createContext","games","error","setGames","setError","IgdbContextProvider","props","useState","fetchedGames","setFetchedGames","isFetchingError","setIsFetchingError","halfYearTimePeriod","setHalfYearPeriodTimeString","filterData","useEffect","lastSixMonthsPopularGames","results","shuffledGames","sort","a","b","Math","random","lastGame","splice","updatedGames","console","log","catch","errorMessage","contextValue","Provider","value","children","currentDate","Date","getFullYear","getMonth","slice","getDate","currentYear","currentMonth","currentDay","sixMonthsAgoDay","halfYearAgoDate","setDate","halfYearAgoMonth","halfYearAgoDay","getElapsedDaysSincePastDate","pastDate","isRounded","elapsedSeconds","floor","getTime","elapsedMinutes","elapsedHours","elapsedDays","getRoundedDaysGone","daysGone","round","StyledBackdrop","styled","Box","$isWhite","css","animationTiming","enter","exit","Backdrop","CSSTransition","mountOnEnter","unmountOnExit","in","isVisible","timeout","classNames","exitActive","onClick","onClickBackdrop","StyledHero","StyledGameInfo","StyledHeading","h2","StyledEdit","StyledReleasedDate","p","StyledPublisher","Link","Hero","memo","isModalVisible","setIsModalVisible","releaseDate","release","day","month","toLocaleString","year","transformedDate","toggleModalHandler","e","preventDefault","prevState","backdrop","twitchModal","onCloseModal","height","width","fit","transform","src","alt","title","href","publisherSlug","publisher","StyledTwitchBox","StyledCloseButton","button","StyledTwitchButton","Button","TwitchModal","enterActive","enterDone","justify","align","Close","w","leftIcon","Details","isReadMoreClicked","setIsReadMoreClicked","name","status","id","menu","setMenu","position","display","m","nameSlug","genres","genreSlug","platforms","versions","description","website","reddit","onMenuButtonClick","currentTarget","getAttribute","menuCopy","item","onReadMoreClick","buttonPosition","metacritic","StyledFollowButton","CoverImage","top","marginRight","h","StyledMenuUnderline","span","StyledMenuButton","active","Description","buttons","map","section","trimmedDescription","substr","descriptionVersion","readMore","flex","padding","borderRight","bg","spacing","variant","StyledParagraph","StyledSpan","StyledLink","StyledReadMore","StyledIconLinkContainer","StyledIconLink","StyledIconSpan","StyledIcon","Icon","About","genre","index","array","length","platform","slug","as","BiLinkExternal","FaRedditAlien","AddTo","fontSize","borderRadius","_active","Share","alignSelf","_hover","color","style","readOnly","select","type","window","location","border","borderLeft","borderColor","_focus","StyledCircleRating","div","bar","StyledFirstHalfBar","StyledSecondHalfBar","progress","StyledFirstProgressBar","time","degrees","StyledSecondProgressBar","elapsedTime","Rating","rating","transformRatingToDegrees","fullDegrees","firstDegrees","secondDegrees","firstPartTiming","secondPartTiming","marginLeft","borderBottom","Logo","maxWidth","NavigationSubItem","marginTop","items","icon","hasDivider","Navigation","Star","subItems","AtSign","navItems","isLazy","autoSelect","rightIcon","ChevronDown","textTransform","boxShadow","Heading","PersonalizeModal","left","flexDirection","minWidth","zIndex","right","cursor","flexWrap","label","onClickButton","StyledBox","GameTitle","h3","GameGenre","GameRating","PopularGame","link","fallbackSrc","StyledInput","Input","attrs","placeholder","Search","maxW","bgColor","pointerEvents","boxSize","styledIcon","StyledIconLeft","ChevronLeftIcon","StyledIconRight","ChevronRightIcon","PopularSection","shiftValue","setShiftValue","isSliderReady","setIsSliderReady","igdbContext","useContext","slideHandler","slidesContainer","slideWidth","offsetWidth","slideDirection","translateValue","setTimeout","shiftData","ShiftData","container","translate","slide","direction","copiedGame","updateSlides","transition","game","background_image","MainHeading","h1","HeadingSpan","WelcomeSection","justifyContent","IoMdOptions","fontWeight","Label","input","Span","Checkbox","flexBasis","marginBottom","Check","defaultFocusValue","defaultActiveValue","defaultHoverValue","DefaultButton","kind","StyledHeader","header","Header","BsTwitch","Layout"],"mappings":"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","file":"static/js/main.b4c67d08.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {  axiosClient, responseBody } from \"../apiClient\";\n\nexport const fetchPopularGamesData = ((query: string) => {\n  return axiosClient.get(`/games${query}`).then(responseBody);\n});\n\nexport const fetchGameData = ((endpoint: string, query: string, ) => {\n  const fetchGameInfo = axiosClient.get(`/games/${endpoint}${query}`).then(responseBody);\n  const fetchGameScreenshots = axiosClient.get(`/games/${endpoint}/screenshots${query}`).then(responseBody);\n  const fetchGameSeries = axiosClient.get(`/games/${endpoint}/game-series${query}`).then(responseBody);\n\n  return axios.all([fetchGameInfo, fetchGameScreenshots, fetchGameSeries])\n});","import { extendTheme } from '@chakra-ui/react';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const theme = extendTheme({\n  colors: { white: \"var(--color-background)\" }\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    padding: 0;\n    margin: 0;\n    box-sizing: inherit;\n  }\n\n  html { font-size: 62.5%; } // 1rem = 10px \n  body { box-sizing: border-box; }\n  \n  :root {\n    // Measures\n    --default-slides-amount: 4;\n    --default-slides-spacing: .5rem;\n    --default-width: 1152px;\n    --main-page-padding: 1rem;\n    \n    --slide-width: calc(\n      (var(--default-width) - var(--main-page-padding) * 2) \n      / var(--default-slides-amount) - var(--default-slides-spacing) * 2\n    );\n\n    \n    // GamePage component\n    --default-cover-image-width: 26rem;\n    --cover-image-spacing: 2rem;\n    --menu-button-width: 8rem;\n    --circle-rating-size: 12rem;\n    --progress-bar-width: 2rem;\n    --rating-animation-delay: 1s;\n    \n    // Colors\n    --color-primary: #323A45;\n    --color-background: #FAFAFA;\n    --color-white: #FFFFFF;\n    --color-white-2: #ECF0F1;\n    --color-black: #444;\n    --color-black-2: #555;\n    --color-grey: hsl(0, 0%, 90%);\n    --color-grey-2: #858585;\n    --color-grey-3: #ECECEC;\n    --color-grey-4: #34373b;\n    --color-grey-5: #BDC3C7;\n    --color-grey-6: #e6e6e6;\n    --color-grey-7: #bfbfbf;\n    --color-grey-rating: #F3F3F3;\n    --color-edit-bg: #f7f8fa;\n    --color-edit: #4E4E4E;\n    --color-accent: #9047FF;\n    --color-accent-2: #9147ff;\n    --color-accent-3: #f1c40f;\n    --color-accent-dark: #7214FF;\n    --color-accent-dark-2: #7314FF;\n    --color-accent-dark-3: #6000ef;\n    --color-facebook: #3b5998;\n    --color-twitter: #55ACEE;\n    --color-google: #d34836;\n    --color-rating: #6BA43A;\n    \n    // Fonts\n    --xsmall-font-size: 1.2rem;\n    --small-font-size: 1.4rem;\n    --default-font-size: 1.6rem;\n    --medium-font-size: 1.8rem;\n    --medium-font-size-2: 2rem;\n    --big-font-size: 2.4rem;\n    --xl-font-size: 2.8rem;\n    --rating-size: 3rem;\n    --game-heading-size: 6rem;\n    \n    // Animations\n    @keyframes appear { to { opacity: .5; } }\n    @keyframes hide { \n      from { opacity: .5; }\n      to { opacity: 0; } \n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { Fragment, Suspense } from 'react';\nimport GlobalStyle, { theme } from './styles/global';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Layout, MainPage } from './components';\nimport { Redirect, Route, Switch } from 'react-router';\n\nconst GamePageComponent = React.lazy(() => import('./components/GamePage/GamePage') );\n// const PublisherPageComponent = React.lazy(() => import('./components/PublisherPage/PublisherPage') );\n// const GenrePageComponent = React.lazy(() => import('./components/GenrePage/GenrePage') );\n// const PlatformPageComponent = React.lazy(() => import('./components/PlatformPage/PlatformPage') );\n// const SeriesPageComponent = React.lazy(() => import('./components/SeriesPage/SeriesPage') );\n\nexport const App: React.FC = () => {\n  const routes =\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route path=\"/discovery\" exact component={MainPage} />\n        <Route path=\"/games/:game\" exact component={GamePageComponent} />\n        {/* <Route path=\"/companies/:publisher\" exact component={PublisherPageComponent} /> */}\n        {/* <Route path=\"/genres/:genre\" exact component={GenrePageComponent} /> */}\n        {/* <Route path=\"/platforms/:platform\" exact component={PlatformPageComponent} /> */}\n        {/* <Route path=\"/games/:game/series\" exact component={SeriesPageComponent} /> */}\n        <Redirect to=\"/discovery\" />\n      </Switch>\n    </Suspense>\n  \n  return (\n    <Fragment>\n      <ChakraProvider theme={theme}>\n        <GlobalStyle />\n        <Layout>\n          {routes}\n        </Layout>\n      </ChakraProvider>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { IgdbContextProvider } from './store/IgdbContext';\n\nReactDOM.render(\n  <IgdbContextProvider>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </IgdbContextProvider>,\n  document.getElementById('root')\n);\n\n","import axios, { AxiosResponse } from \"axios\";\n\nconst apiKey = '6cb0dad0b2204442bfdfda2715ca7de1';\n\nexport const responseBody = (response: AxiosResponse) => response.data;\n\nexport const setQuery = (filter?: string) => {\n  const query = `?key=${apiKey}${filter ?? '' }`;\n  \n  return query;\n} \n\nexport const axiosClient = axios.create({\n  baseURL: 'https://api.rawg.io/api'\n});","import React, { useEffect, useState } from \"react\";\nimport { setQuery } from \"../network/apiClient\";\nimport { fetchPopularGamesData } from \"../network/lib/games\";\nimport { setHalfYearPeriodTimeString } from \"../shared/utility\";\nimport { Context } from \"./interfaces\";\n\nexport const IgdbContext = React.createContext<Context>({\n  games: [],\n  error: false,\n  setGames: () => {},\n  setError: () => {}\n});\n\nexport const IgdbContextProvider: React.FC = props => {\n  const [fetchedGames, setFetchedGames] = useState<any[]>([]);\n  const [isFetchingError, setIsFetchingError] = useState<boolean | string>(false);\n\n  const halfYearTimePeriod: string = setHalfYearPeriodTimeString();\n  const gamesAmountToFetch = 10;\n  const filterData = `&dates=${halfYearTimePeriod}&page_size=${gamesAmountToFetch}`;\n  const query: string = setQuery(filterData);\n  \n  useEffect(() => {\n    fetchPopularGamesData(query)\n    .then(response => {\n      const lastSixMonthsPopularGames = response.results;\n      const shuffledGames = lastSixMonthsPopularGames.sort((a: {}, b: {}) => .5 - Math.random());\n      const lastGame = shuffledGames.splice(-1, 1);\n      const updatedGames = [...lastGame, ...shuffledGames];\n\n      console.log(lastSixMonthsPopularGames);\n      \n      setFetchedGames(updatedGames);\n    })\n    \n    .catch(error => {\n      const errorMessage: string = error.response.data.error;\n      \n      setIsFetchingError(errorMessage);\n    })\n  }, []);\n \n  const contextValue: Context = {\n    games: fetchedGames, \n    error: isFetchingError,\n    setGames: setFetchedGames,\n    setError: setIsFetchingError\n  };\n  \n  return <IgdbContext.Provider value={contextValue}>\n          {props.children}\n         </IgdbContext.Provider>;\n}","export const setHalfYearPeriodTimeString = () => {\n  const currentDate = new Date();\n\n  const [currentYear, currentMonth, currentDay] = [\n    currentDate.getFullYear(),\n    (`0${currentDate.getMonth() + 1}`).slice(-2),\n    (`0${currentDate.getDate()}`).slice(-2)\n  ];\n  \n  const sixMonthsAgoDay = currentDate.getDate() - 180;\n  const halfYearAgoDate = new Date(currentDate.setDate(sixMonthsAgoDay));\n  \n  const [halfYearAgoYear, halfYearAgoMonth, halfYearAgoDay] = [\n    halfYearAgoDate.getFullYear(),\n    (`0${halfYearAgoDate.getMonth() + 1}`).slice(-2),\n    (`0${halfYearAgoDate.getDate()}`).slice(-2)\n  ];\n\n  const halfYearTimePeriod = `${halfYearAgoYear}-${halfYearAgoMonth}-${halfYearAgoDay},${currentYear}-${currentMonth}-${currentDay}`;\n\n  return halfYearTimePeriod;\n}\n\nexport const getElapsedDaysSincePastDate = (pastDate: string, isRounded?: boolean) => {\n  const elapsedSeconds = Math.floor((new Date().getTime() - new Date(pastDate).getTime()) / 1000);\n  const elapsedMinutes = Math.floor(elapsedSeconds / 60);\n  const elapsedHours = Math.floor(elapsedMinutes / 60);\n  const elapsedDays = Math.floor(elapsedHours / 24);\n\n  return isRounded ? getRoundedDaysGone(elapsedDays) : elapsedDays;\n}\n\nconst getRoundedDaysGone = (daysGone: number) => {\n  if (daysGone < 30) return `${daysGone} ${daysGone === 1 ? 'day' : 'days'} ago`;\n  if (Math.round(daysGone / 30) === 1) return 'a month ago'; \n  return `${Math.round(daysGone / 30)} months ago`;\n} ","import { Box } from \"@chakra-ui/layout\";\nimport styled, { css } from \"styled-components\";\n\nexport const StyledBackdrop = styled(Box)<{$iswhite: boolean}>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  background-color: ${props => props.$isWhite ? \"var(--color-white)}\" : \"var(--color-black)\"};\n  z-index: 20;\n\n  ${props => !props.$isWhite && css`\n    animation: appear .5s ease;\n    opacity: 0;\n    animation-fill-mode: forwards;\n  `};\n\n  &.hide { animation: hide .5s ease; }\n`;","import React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { Props } from \"./interfaces\";\nimport { StyledBackdrop } from \"./styles\";\n\nconst animationTiming = {\n  enter: 500,\n  exit: 500\n};\n\nexport const Backdrop: React.FC<Props> = props => (\n  <CSSTransition\n    mountOnEnter\n    unmountOnExit\n    in={props.isVisible}\n    timeout={animationTiming}\n    classNames={{exitActive: 'hide'}}>\n    <StyledBackdrop\n      $isWhite={props.$isWhite}\n      onClick={props.onClickBackdrop} />\n  </CSSTransition>\n) ","import { Box } from \"@chakra-ui/layout\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledHero = styled(Box)`\n  position: relative;\n  width: 100vw;\n  height: 47vh;\n  overflow: hidden;\n  background: linear-gradient(to bottom, var(--color-grey-3) 0%, var(--color-grey-3) 70%, var(--color-grey-5) 100%);\n`;\n\nexport const StyledGameInfo = styled(Box)`\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: var(--default-width);\n  margin-left: calc(var(--default-cover-image-width) + var(--cover-image-spacing));\n  color: var(--color-background);\n  font-weight: 600;\n`; \n\nexport const StyledHeading = styled.h2`\n  display: flex;\n  align-items: center;\n  font-size: var(--game-heading-size);\n  font-weight: bold;\n  color: var(--color-white);\n  `;\n\nexport const StyledEdit = styled.a`\n  font-size: var(--xsmall-font-size);\n  color: var(--color-edit);\n  background-color: var(--color-edit-bg);\n  margin-left: 2rem;\n  padding: .3rem .5rem;\n  border-radius: 2px;\n  opacity: .5;\n\n  &:hover { background-color: var(--color-grey-5); }\n`;\n\nexport const StyledReleasedDate = styled.p`\n  font-size: var(--big-font-size);\n  opacity: .8;\n`;\n\nexport const StyledPublisher = styled(Link)`\n  display: inline-block;\n  font-size: var(--medium-font-size);\n  font-style: italic;\n  margin: 2rem 0;\n  line-height: 1;\n  border-bottom: 1px solid transparent;\n  opacity: .8;\n\n  &:hover { border-color: var(--color-accent); }\n`;","import React, { Fragment, useState } from \"react\";\nimport { Image } from \"@chakra-ui/image\";\nimport { getElapsedDaysSincePastDate } from \"../../../shared/utility\";\nimport { Props } from \"./interfaces\";\nimport { StyledEdit, StyledGameInfo, StyledHeading, StyledHero, StyledPublisher, StyledReleasedDate } from \"./styles\";\nimport { Backdrop, TwitchModal } from \"../../\";\n\nexport const Hero: React.FC<Props> = React.memo(props => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const releaseDate = props.release;\n  const day = new Date(releaseDate).getDate();\n  const month = new Date(releaseDate).toLocaleString('default', { month: 'short' });\n  const year = new Date(releaseDate).getFullYear(); \n  const elapsedDays: string | number = getElapsedDaysSincePastDate(releaseDate, true);\n  \n  const transformedDate = `${day} ${month}, ${year} (${elapsedDays})`;\n\n  const toggleModalHandler = (e: React.MouseEvent) => {\n    e.preventDefault(); \n    setIsModalVisible(prevState => !prevState);\n  };\n\n  const backdrop = <Backdrop isVisible={isModalVisible} onClickBackdrop={e => toggleModalHandler(e)} />;\n  const twitchModal = <TwitchModal isVisible={isModalVisible} onCloseModal={e => toggleModalHandler(e)} />\n\n  return (\n    <Fragment>\n      {backdrop}\n      {twitchModal}\n      <StyledHero>\n        <Image\n          height=\"100%\"\n          width=\"100%\"\n          fit=\"cover\"\n          filter=\"blur(8px)\"\n          transform=\"scale(1.1)\"\n          src={props.src}\n          alt={props.alt} />\n        <StyledGameInfo>\n          <StyledHeading>\n            {props.title}\n            <StyledEdit \n              href=\"https://www.igdb.com/dialog/login\"\n              onClick={toggleModalHandler}>Edit</StyledEdit>\n          </StyledHeading>\n          <StyledReleasedDate>{transformedDate}</StyledReleasedDate>\n          <StyledPublisher to={`/companies/${props.publisherSlug}`}>{props.publisher}</StyledPublisher>\n        </StyledGameInfo>\n      </StyledHero>\n    </Fragment>\n  );\n})\n","import { Button } from \"@chakra-ui/button\";\nimport { Box } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\n\nexport const StyledTwitchBox = styled(Box)`\n  &&& { animation-fill-mode: forwards; }\n\n  position: absolute;\n  left: 50%;\n  font-size: var(--default-font-size);\n  font-weight: 700;\n  width: 70vh;\n  background-color: var(--color-background);\n  border-radius: 6px;\n  padding: .6rem;\n  z-index: 20;\n  \n  &.appear { animation: slideDown .5s ease; }\n  &.hide { animation: slideUp 1s ease; }\n  \n  @keyframes slideDown { \n    from { \n      opacity: 0;\n      transform: translate(-50%, -20rem);\n    } \n    \n    to {\n      opacity: 1;\n      transform: translate(-50%, 2.5rem);\n    } \n  }\n\n  @keyframes slideUp { \n    from { \n      opacity: 1;\n      transform: translate(-50%, 2.5rem);\n    } \n    \n    to {\n      opacity: 0;\n      transform: translate(-50%, -20rem);\n    } \n  }\n`;\n\nexport const StyledCloseButton = styled.button`\n  padding: 1rem;\n  line-height: 0;\n  cursor: pointer;\n  opacity: .5;\n  transition: opacity .3s;\n  backface-visibility: hidden;\n\n  &:hover { opacity: 1; }\n`;\n\nexport const StyledTwitchButton = styled(Button)`\n  && {\n    width: 100%; \n    background: var(--color-accent-2);\n    font-size: var(--default-font-size);\n    font-weight: 600;\n  }\n  \n  margin: 1rem 0 1.5rem;\n  padding: 2.7rem;\n  width: 100%;\n  color: var(--color-white);\n  animation-fill-mode: forwards;\n\n  &&:hover,\n  &:hover svg { \n    color: var(--color-white-2);\n    background-color: var(--color-accent-2);\n  }\n`;\n\n","import React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { BsTwitch } from \"react-icons/bs\";\nimport { StyledCloseButton, StyledTwitchBox, StyledTwitchButton } from \"./styles\";\n\nconst animationTiming = {\n  enter: 500,\n  exit: 1000\n};\n\nexport const TwitchModal: React.FC<{onCloseModal: React.MouseEventHandler, isVisible: boolean}> = props => (\n  <CSSTransition\n    mountOnEnter\n    unmountOnExit\n    in={props.isVisible}\n    timeout={animationTiming}\n    classNames={{\n      enterActive: 'appear',\n      enterDone: 'appear',\n      exitActive: 'hide'}}>\n    <StyledTwitchBox>\n      <Flex \n        justify=\"space-between\" \n        align=\"center\">\n        <span>Log in to IGDB.com</span>\n        <StyledCloseButton onClick={props.onCloseModal}>\n          <CloseIcon w=\"1rem\" />\n        </StyledCloseButton>\n      </Flex>\n      <a href=\"https://www.igdb.com/oauth/twitch\">\n        <StyledTwitchButton \n          leftIcon={<BsTwitch />}>\n          Login or Create a Twitch Account      \n        </StyledTwitchButton>\n      </a>\n    </StyledTwitchBox>\n  </CSSTransition>\n) ","import React, { useState } from \"react\"\nimport { Box } from \"@chakra-ui/layout\"\nimport { Menu, Props } from \"./interfaces\"\nimport { CoverImage, Description, Rating } from \"../..\"\n\nexport const Details: React.FC<Props> = props => {\n  const [isReadMoreClicked, setIsReadMoreClicked] = useState<boolean>(false);\n  const [menu, setMenu] = useState<Menu[]>([\n    {\n      name: \"About\",\n      status: true,\n      id: \"about\"\n    },\n    {\n      name: \"Add To\",\n      status: false,\n      id: \"add\"\n    },\n    {\n      name: \"Share\",\n      status: false,\n      id: \"share\"\n    }\n  ]);\n  \n  const onSwitchActiveButtonHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.getAttribute('id')!;\n    const menuCopy = [...menu];\n    \n    for (const item of menuCopy) {\n      item.status = false;\n      if (item.id === id) item.status = true;\n    }\n    \n    setMenu(menuCopy);\n  };\n  \n  const getActiveButtonPosition = () => {\n    let position = 0;\n    \n    for (const button of menu) {\n      if (button.status) break;\n      position += 1;  \n    }\n    \n    return position;\n  };\n\n  const readMoreClickHandler = () => setIsReadMoreClicked(true);\n\n  return (\n    <Box\n      position=\"relative\"\n      display=\"flex\"\n      w=\"var(--default-width)\"\n      m=\"0 auto 2rem\">\n      <CoverImage src={props.src} />\n      <Description\n        nameSlug={props.nameSlug}\n        genres={props.genres}\n        genreSlug={props.genreSlug}\n        platforms={props.platforms}\n        versions={props.versions}\n        description={props.description as string}\n        website={props.website}\n        reddit={props.reddit}\n        menu={menu}\n        isReadMoreClicked={isReadMoreClicked}\n        onMenuButtonClick={onSwitchActiveButtonHandler}\n        onReadMoreClick={readMoreClickHandler}\n        buttonPosition={getActiveButtonPosition}  />\n      \n      <Rating  metacritic={props.metacritic}  />\n      \n    </Box>\n  );\n}","import styled from \"styled-components\";\n\nexport const StyledFollowButton = styled.button`\n  width: 100%;\n  margin-top: 2rem;\n  padding: .7rem 0;\n  font-size: var(--small-font-size);\n  font-weight: 600;\n  color: var(--color-white);\n  background: var(--color-accent-2);\n  border: 1px solid var(--color-accent-2);\n  border-radius: 4px;\n  \n  &:hover {\n    background: var(--color-accent-dark-2);\n    border-color: var(--color-accent-dark-2);\n  }\n\n  &:active {\n    background: var(--color-accent-dark-3);\n    border-color: var(--color-accent-dark-3);\n  }\n`;","import { Image } from \"@chakra-ui/image\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { StyledFollowButton } from \"./styles\";\n\nexport const CoverImage: React.FC<{src: string}> = props => (\n  <Box\n    position=\"relative\"\n    top=\"-25rem\"\n    w=\"var(--default-cover-image-width)\"\n    marginRight=\"var(--cover-image-spacing)\">\n    <Image\n      w=\"100%\"\n      h=\"35rem\"\n      fit=\"cover\"\n      src={props.src} />\n    <StyledFollowButton>Follow</StyledFollowButton>\n  </Box>\n)","import styled from \"styled-components\";\n\nexport const StyledMenuUnderline = styled.span<{position: () => number}>`\n  position: absolute;\n  bottom: 0;\n  width: var(--menu-button-width);\n  height: 2px;\n  background: var(--color-accent-2);\n  transform: translateX(calc(${props => props.position} * var(--menu-button-width)));\n  transition: transform .3s;\n`;\n\nexport const StyledMenuButton = styled.button<{active?: boolean}>`\n  width: var(--menu-button-width);\n  font-size: var(--small-font-size);\n  font-weight: 700;\n  color: ${props => props.active ? \"var(--color-black)\" : \"var(--color-grey-2)\"};\n  padding: 1.7rem 0;\n  white-space: nowrap;\n  transition: color .3s;\n`;","import { ButtonGroup } from \"@chakra-ui/button\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { About, AddTo, Share } from \"../../../\";\nimport { Menu } from \"../interfaces\";\nimport { Props } from \"./interfaces\";\nimport { StyledMenuButton, StyledMenuUnderline } from \"./styles\";\n\nexport const Description: React.FC<Props> = props => {\n\n  const buttons = props.menu.map((button: Menu) => (\n    <StyledMenuButton\n      key={button.id}\n      active={button.status}\n      id={button.id}\n      onClick={e => props.onMenuButtonClick(e)}>{button.name}</StyledMenuButton>\n  ));\n\n  const section = props.menu.map(item => {\n    let section;\n    \n    if (item.name === \"About\" && item.status) {\n      const trimmedDescription = `${props.description.substr(0, 430)}...`;\n\n      section = (\n        <About\n          key={item.id}\n          nameSlug={props.nameSlug}\n          genres={props.genres}\n          genreSlug={props.genreSlug}\n          platforms={props.platforms}\n          descriptionVersion={props.isReadMoreClicked ? props.description : trimmedDescription}\n          versions={props.versions}\n          readMore={props.isReadMoreClicked}\n          onReadMoreClick={props.onReadMoreClick}\n          website={props.website}\n          reddit={props.reddit}  />\n      )\n    }\n    \n    if (item.name === \"Add To\" && item.status) section = <AddTo key={item.id}  />;\n    if (item.name === \"Share\" && item.status) section = <Share key={item.id}  />;\n    \n    return section;\n  });\n\n  return (\n    <Box flex=\"1\">\n      <Box\n        padding=\" 0 var(--cover-image-spacing) 8rem 0\" \n        borderRight=\"1px solid var(--color-grey-3)\">\n        <Box bg=\"var(--color-white)\">\n          <ButtonGroup\n            position=\"relative\"\n            spacing=\"0px\"\n            variant=\"ghost\">\n            {buttons}\n            <StyledMenuUnderline position={props.buttonPosition} />\n          </ButtonGroup>\n        </Box>\n        {section}\n      </Box>\n    </Box>\n  );\n}","import Icon from \"@chakra-ui/icon\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledParagraph = styled.p`\n  font-size: var(--small-font-size);\n  margin-bottom: 1rem;\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 600;\n  color: var(--color-grey-4);\n`;\n\nexport const StyledLink = styled(Link)`\n  color: var(--color-accent-2);\n  border-bottom: 1px solid transparent;\n\n  &:hover { border-color: var(--color-accent-2); }\n`;\n\nexport const StyledReadMore = styled.button`\n  color: var(--color-accent-2);\n  font-weight: bold;\n`;\n\nexport const StyledIconLinkContainer = styled(Box)`\n  flex: 0 0 33.33%;\n`;\n\nexport const StyledIconLink = styled.a`\n  font-size: var(--small-font-size);\n  font-weight: 500;\n\n  &:hover span:last-child {\n    color: var(--color-accent-2);\n    border-bottom: 1px solid var(--color-accent-2);\n  }\n`;\n\nexport const StyledIconSpan = styled.span`\n  display: inline-block;\n  margin-right: 1rem;\n  padding: .2rem;\n  border-radius: 4px;\n  background-color: var(--color-accent-2);\n`;\n\nexport const StyledIcon = styled(Icon)`\n  display: inline-block;\n  font-size: 2.3rem;\n  color: var(--color-white);\n  line-height: 0;\n`;","import { Box, Flex } from \"@chakra-ui/react\";\nimport { AboutProps } from \"./interfaces\";\nimport { StyledIcon, StyledIconLink, StyledIconLinkContainer, StyledIconSpan, StyledLink, StyledParagraph, StyledReadMore, StyledSpan } from \"./styles\";\nimport { BiLinkExternal } from 'react-icons/bi';\nimport { FaRedditAlien } from 'react-icons/fa';\n\nexport const About: React.FC<AboutProps> = props => (\n  <Box>\n    <Box p=\"2rem 2rem 0 0\">\n      <StyledParagraph>\n        <StyledSpan>Genre: </StyledSpan>\n          {props.genres.map((genre, index, array) => \n            <StyledLink key={genre.id} to={`/genres/${props.genreSlug}`}>\n              {genre.name}{array.length - 1 === index || ', '}\n            </StyledLink>  \n          )}\n      </StyledParagraph>\n\n      <StyledParagraph>\n        <StyledSpan>Platforms: </StyledSpan>\n          {props.platforms.map((platform, index, array) => (\n            <StyledLink key={platform.platform.id} to={`/platforms/${platform.platform.slug}`}>\n              {platform.platform.name}{array.length - 1 === index || ', '}\n            </StyledLink>\n          ))}\n      </StyledParagraph>\n\n      {props.versions.length > 0 &&\n        <StyledParagraph>\n          <StyledSpan>Versions: </StyledSpan>\n          <StyledLink to={`/games/${props.nameSlug}/series`}>See {props.versions.length} more parts of this game</StyledLink>\n        </StyledParagraph>\n      }\n    </Box>\n\n    <Box>\n      <StyledParagraph>\n        {props.descriptionVersion}\n        {props.readMore \n          || <StyledReadMore onClick={props.onReadMoreClick}>Read More</StyledReadMore>}\n      </StyledParagraph>\n    </Box>\n\n    <Flex>\n      <StyledIconLinkContainer>\n        <StyledIconLink href={props.website}>\n          <StyledIconSpan>\n            <StyledIcon as={BiLinkExternal} />\n          </StyledIconSpan>\n          <span>\n            Official Website\n          </span>\n        </StyledIconLink>\n      </StyledIconLinkContainer>\n      {props.reddit &&\n        <StyledIconLinkContainer>\n          <StyledIconLink href={props.reddit}>\n            <StyledIconSpan>\n              <StyledIcon as={FaRedditAlien} />\n            </StyledIconSpan>\n            <span>\n              Subreddit\n            </span>\n          </StyledIconLink>\n        </StyledIconLinkContainer>\n      }\n    </Flex>\n  </Box>\n)","import styled from \"styled-components\";\n\nexport const StyledParagraph = styled.p`\n  font-size: var(--small-font-size);\n  color: var(--color-grey-4);\n  `;\n\nexport const StyledSpan = styled.span`\n  display: inline-block;\n  padding: .2rem 0;\n  color: var(--color-accent-2);\n  font-weight: 500;\n  cursor: pointer;\n`;","import { Box } from \"@chakra-ui/layout\";\nimport { DefaultButton } from \"../../../..\";\nimport { StyledParagraph, StyledSpan } from \"./styles\";\n\nexport const AddTo: React.FC = () => (\n  <Box p=\"3rem 0 0\">\n    <StyledParagraph>No lists available, why not <StyledSpan>create one</StyledSpan>?</StyledParagraph>\n    <DefaultButton\n      m=\"4rem 0 0\"\n      p=\"1rem 1.5rem\"\n      fontSize=\"var(--small-font-size)\"\n      borderRadius=\"4px\"\n      _active={{bg: \"var(--color-accent-dark-3)\"}}\n    >Create new list</DefaultButton>\n  </Box>\n)","import { Box } from \"@chakra-ui/layout\";\nimport { HStack, InputGroup, InputLeftAddon, Input } from \"@chakra-ui/react\";\nimport { FaFacebook, FaGooglePlus, FaLink, FaTwitter } from \"react-icons/fa\";\nimport { DefaultButton } from \"../../../..\";\n\nexport const Share: React.FC = props => (\n  <Box>\n    <HStack spacing=\"1rem\">\n      <DefaultButton\n        alignSelf=\"center\"\n        m=\"2rem 0 2.2rem\"\n        p=\".7rem 1.2rem\"\n        bg=\"var(--color-facebook)\"\n        borderRadius=\"4px\"\n        _hover={{color: \"var(--color-white-2)\"}}\n        _active={{bg: \"var(--color-facebook)\"}}\n        \n        leftIcon={<FaFacebook \n                    style={{marginRight: \".7rem\"}}\n                    fontSize=\"1.7rem\"  />}>Facebook</DefaultButton>\n      <DefaultButton\n        alignSelf=\"center\"\n        p=\".7rem 1.2rem\"\n        bg=\"var(--color-twitter)\"\n        borderRadius=\"4px\"\n        _hover={{color: \"var(--color-white-2)\"}}\n        _active={{bg: \"var(--color-twitter)\"}}\n        \n        leftIcon={<FaTwitter \n                    style={{marginRight: \".7rem\"}}\n                    fontSize=\"1.7rem\"  />}>Tweet</DefaultButton>\n      <DefaultButton\n        alignSelf=\"center\"\n        p=\".7rem 1.2rem\"\n        bg=\"var(--color-google)\"\n        borderRadius=\"4px\"\n        _hover={{color: \"var(--color-white-2)\"}}\n        _active={{bg: \"var(--color-google)\"}}\n\n        leftIcon={<FaGooglePlus \n                    style={{marginRight: \".7rem\"}}\n                    fontSize=\"1.7rem\"  />}>Google</DefaultButton>\n    </HStack>\n\n    <InputGroup>\n      <InputLeftAddon\n        p=\"1.5rem 1.2rem\"\n        color=\"var(--color-black-2)\"\n        bg=\"var(--color-grey-3)\"\n        children={<FaLink />}\n        fontSize=\"1.5rem\"  />\n      <Input\n        readOnly\n        onClick={e => e.currentTarget.select()}\n        type=\"text\"\n        value={window.location.href}\n        p=\"1.4rem\"\n        fontSize=\"var(--small-font-size)\"\n        border=\"2px\"\n        borderLeft=\"none\"\n        _hover={{borderColor: \"none\"}}\n        _focus={{borderColor: \"var(--color-accent-2)\"}}  />\n    </InputGroup>\n  </Box>\n)","import styled, { css } from \"styled-components\";\n\nexport const StyledCircleRating = styled.div<{metacritic: number}>`\n  position: relative;\n  width: var(--circle-rating-size);\n  height: var(--circle-rating-size);\n  background-color: var(--color-white);\n  border-radius: 50%;\n  z-index: 10;\n  \n  &::after {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    content: \"${props => props.metacritic}\";\n    width: 100%;\n    height: 100%;\n    font-size: var(--rating-size);\n    border-radius: 50%;\n  }\n`;\n\nconst bar = css`\n  position: absolute;\n  top: calc(var(--progress-bar-width) / 2 * -1);\n  left: calc(var(--progress-bar-width) / 2 * -1);\n  width: calc(var(--circle-rating-size) + var(--progress-bar-width));\n  height: calc(var(--circle-rating-size) + var(--progress-bar-width));\n  border-radius: 50%;\n  background-color: var(--color-grey-rating);\n`;\n\nexport const StyledFirstHalfBar = styled.div`\n  ${bar}\n  clip-path: polygon(50% 0, 100% 0, 100% 100%, 50% 100%);\n`\nexport const StyledSecondHalfBar = styled.div`\n  ${bar}\n  clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%);\n`\n\nconst progress = css`\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-rating);\n  border-radius: 50%;\n`;\n\nexport const StyledFirstProgressBar = styled.div<{degrees: number, time: number}>`\n  ${progress}\n  clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%);\n  animation: rotateFirstHalf ${props => props.time}s var(--rating-animation-delay) linear;\n  animation-fill-mode: forwards;\n  \n  @keyframes rotateFirstHalf {      \n    100% { transform: rotate(${props => props.degrees}deg); }\n  }\n`;\n\nexport const StyledSecondProgressBar = styled.div<{degrees: number, time: number, elapsedTime: number}>`\n  ${progress}\n  clip-path: polygon(50% 0, 100% 0, 100% 100%, 50% 100%);\n  \n  ${props => props.degrees && css`\n    animation: rotateSecondHalf ${props.time}s linear;\n    animation-fill-mode: forwards;\n    animation-delay: calc(${props.elapsedTime}s + var(--rating-animation-delay));\n\n    @keyframes rotateSecondHalf {\n      100% { transform: rotate(${props.degrees}deg); }\n    }\n  `}\n`;\n","import { Box } from \"@chakra-ui/layout\";\nimport { Props } from \"./interfaces\";\nimport { StyledCircleRating, StyledFirstHalfBar, StyledFirstProgressBar, StyledSecondHalfBar, StyledSecondProgressBar, } from \"./styles\";\n\nexport const Rating: React.FC<Props> = props => {\n  const transformRatingToDegrees = (rating: number) => {\n    const degrees = Math.floor(rating * 360 / 100);\n    \n    if (degrees < 181) return [degrees];\n    const firstProgressBarDegrees = 180;\n    const secondProgressBarDegrees = degrees - 180;\n\n    return [degrees, firstProgressBarDegrees, secondProgressBarDegrees];\n  }\n  \n  const adjustAnimationTiming = () => {\n    if (!secondDegrees) return [time];\n    \n    const timingForFirstPart = Math.round(firstDegrees * time / fullDegrees * 100) / 100;\n    const timingForRemainedPart = Math.round(secondDegrees * time / fullDegrees * 100) / 100;\n    \n    return [timingForFirstPart, timingForRemainedPart];    \n    // console.log(timingForFirstPart, timingForRemainedPart);\n  }\n\n  const time = 2;\n  const [fullDegrees, firstDegrees, secondDegrees]: number[] = transformRatingToDegrees(props.metacritic);\n  const [firstPartTiming, secondPartTiming]: number[] = adjustAnimationTiming();\n\n  console.log(firstPartTiming, secondPartTiming);\n\n  console.log(firstDegrees, secondDegrees);\n\n  return (\n    <Box marginLeft=\"var(--cover-image-spacing)\">\n\n      <Box\n        position=\"relative\"\n        top=\"calc((var(--circle-rating-size) ) / 2 * -1)\">\n        <StyledCircleRating metacritic={props.metacritic}  />\n        <StyledFirstHalfBar>\n          <StyledFirstProgressBar\n            degrees={firstDegrees}\n            time={firstPartTiming}  />  \n        </StyledFirstHalfBar>\n        \n        <StyledSecondHalfBar>\n          <StyledSecondProgressBar\n            degrees={secondDegrees}\n            time={secondPartTiming}\n            elapsedTime={firstPartTiming}  />    \n        </StyledSecondHalfBar>\n      </Box>\n\n      <Box\n        h=\"10rem\"\n        borderBottom=\"1px solid var(--color-grey-3)\">\n\n      </Box>\n\n    </Box>\n  );\n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 1rem 2rem;\n  color: var(--color-white);\n  font-size: 2rem;\n`;","import { Box } from '@chakra-ui/react';\nimport { StyledLink } from './styles';\n\nexport const Logo: React.FC = () => (\n    <Box >\n      <StyledLink to=\"/\">Logo</StyledLink>\n    </Box>\n)\n","import { Box } from \"@chakra-ui/react\";\nimport { WelcomeSection, PopularSection } from '../';\n\nexport const MainPage: React.FC = () => (\n  <Box \n    w=\"var(--default-width)\"\n    maxWidth=\"100%\"\n    m=\"auto\"\n    p=\"0 var(--main-page-padding)\">\n    <WelcomeSection />\n    <PopularSection />\n\n  </Box>\n)","import { Fragment } from \"react\";\nimport { MenuList, MenuItem, MenuDivider } from \"@chakra-ui/menu\";\nimport { Props } from \"./interfaces\";\n\nexport const NavigationSubItem: React.FC<Props> = props => (\n  <MenuList\n    bg=\"var(--color-accent)\"\n    color=\"var(--color-white)\"\n    fontSize=\"var(--default-font-size)\"\n    marginTop=\"-0.8rem\"\n    border=\"none\"\n    borderRadius=\"0\">\n    {\n      props.items.map(item => (\n        <Fragment key={item.name}>\n          <MenuItem \n          icon={item.icon}\n          _focus={{bg: \"var(--color-accent-dark)\"}}\n          padding=\"1rem 2rem\">\n          {item.name}</MenuItem>\n          {item.hasDivider && <MenuDivider />}\n        </Fragment>\n      ))\n    }\n  </MenuList>\n)","import { Fragment, useState } from 'react';\nimport { Menu, MenuButton } from '@chakra-ui/menu';\nimport { AtSignIcon, StarIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport { Button } from '@chakra-ui/button';\nimport { NavigationSubItem } from './NavigationSubItem';\n\nexport const Navigation: React.FC = () => {\n  const [navigationItems] = useState([\n      {\n        name: \"Games\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Discover\", icon: <AtSignIcon /> },\n          { name: \"Reviews\", icon: <AtSignIcon /> },\n          { name: \"Advanced Search\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Coming Soon\", icon: <AtSignIcon /> },\n          { name: \"Recently Released\", icon: <AtSignIcon /> },\n          { name: \"Top 100\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Add Game\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Database\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Games\", icon: <AtSignIcon /> },\n          { name: \"Platforms\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Developer API\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Community\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Karma Hunters\", icon: <AtSignIcon /> },\n          { name: \"Discord\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Help\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"About IGDB\", icon: <AtSignIcon /> },\n          { name: \"Contributions\", icon: <AtSignIcon /> },\n          { name: \"UserVoice\", icon: <AtSignIcon /> },\n          { name: \"Contact\", icon: <AtSignIcon /> }\n        ]\n      }\n    ]);\n\n  const navItems = navigationItems.map( item => \n    <Fragment key={item.name}>\n      <Menu isLazy autoSelect={false}>\n        <MenuButton\n            as={Button}\n            leftIcon={item.icon}\n            rightIcon={<ChevronDownIcon />}\n            variant=\"flushed\"\n            alignSelf=\"stretch\"\n            height=\"auto\"\n            color=\"var(--color-white)\"\n            fontSize=\"var(--xsmall-font-size)\"\n            textTransform=\"uppercase\"\n            borderRadius=\"0\"\n            p=\"0 1.5rem\"\n            _focus={{boxShadow: \"none\"}}\n            _active={{\n              color: \"var(--color-white)\",\n              bg: \"var(--color-accent)\",\n              boxShadow: \"none\"}}\n            _hover={{color: \"#7214FF\"}}>\n            {item.name}\n        </MenuButton>\n        <NavigationSubItem items={item.subItems} />\n      </Menu>\n    </Fragment>\n  )\n\n  return (\n    <Fragment>\n      {navItems}\n    </Fragment>\n  );\n}","import styled from \"styled-components\";\nimport { StyledComponentsProps } from \"./interfaces\";\n\nexport const Heading = styled.h2`\n  font-size: var(--big-font-size);\n  font-weight: 500;\n`;\n\nexport const Description = styled.p`\n  margin: 2.5rem 0;\n  font-size: ${(props: StyledComponentsProps) => props.fontSize || \"var(--medium-font-size)\"};\n  font-weight: 300;\n  color: ${(props: StyledComponentsProps) => props.color || \"var(--color-grey-2)\"};\n`;","import { Fragment, useState } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/layout\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { Backdrop, Checkbox, DefaultButton } from \"../\";\nimport { Description, Heading } from \"./styles\";\n\nexport const PersonalizeModal: React.FC<{onCloseModal: () => void, isVisible: boolean}> = props => {\n  const [platforms] = useState([\n    'PC (Microsoft Windows)',\n    'Xbox One',\n    'PlayStation 4',\n    'Nintendo Switch',\n    'Mac',\n    'Linux',\n    'iOS',\n    'Android',\n    'Nintendo 3DS',\n    'Playstation Vita'\n  ]);\n\n  return (\n    <Fragment>\n      <Backdrop \n        isVisible={props.isVisible}\n        $isWhite\n        onClickBackdrop={props.onCloseModal} />\n      <Flex\n        position=\"absolute\"\n        top=\"50vh\"\n        left=\"50vw\"\n        flexDirection=\"column\"\n        transform=\"translate(-50%, -50%)\"\n        minWidth=\"90rem\"\n        zIndex=\"20\">\n        <Box>\n          <Heading>Personalize</Heading>\n          <CloseIcon \n            position=\"absolute\"\n            top=\"0\"\n            right=\"0\"\n            w=\"3.5rem\"\n            h=\"3.5rem\"\n            padding=\".5rem\"\n            cursor=\"pointer\"\n            borderRadius=\"50%\"             \n            _hover={{bg: \"var(--color-grey-3)\"}}\n            \n            onClick={props.onCloseModal} />\n          <Description>Select what you want to see on your homepage</Description>\n        </Box>\n        <Box>\n          <Description\n            fontSize=\"var(--default-font-size)\"\n            color=\"var(color-grey-4)\">Platforms you own:</Description>\n          <Flex\n            flexWrap=\"wrap\">\n            {platforms.map(platform => (\n              <Checkbox key={platform} label={platform} />\n            ))}            \n          </Flex>\n          <Flex marginTop=\"1rem\">\n          <DefaultButton\n              p=\"1.3rem 4rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-grey-2)\"\n              bg=\"var(--color-white)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-grey-6)\"}}\n              _active={{bg: \"var(--color-grey-6)\"}}\n              _hover={{bg: \"var(--color-grey-6)\"}}\n              onClickButton={props.onCloseModal}>\n              Cancel\n            </DefaultButton>\n            <DefaultButton\n              p=\"1.3rem 4rem\"\n              marginLeft=\".5rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-white)\"\n              bg=\"var(--color-accent-2)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-accent-dark)\"}}\n              _active={{bg: \"var(--color-accent-dark)\"}}\n              _hover={{bg: \"var(--color-accent-dark)\",\n                       borderColor: \"var(--color-accent-dark)\"}}\n              onClickButton={props.onCloseModal}>\n              Save\n            </DefaultButton>\n          </Flex>\n        </Box>\n      </Flex>\n    </Fragment>\n  );\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  flex: 1 0 var(--slide-width);\n\n  && { margin: 0 var(--default-slides-spacing); }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, rgba(145,71,255,0.9), rgba(43,187,228,0.9));\n  }\n  \n  &:hover::after,\n  &:hover span { display: block; }\n  `;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  top: 15%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: none;\n  color: var(--color-white);\n  font-size: var(--xl-font-size);\n  z-index: 1;\n  `;\n  \n  export const GameTitle = styled.h3`\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: var(--small-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n    margin-bottom: 2px;\n  `;\n  \n  export const GameGenre = styled.span`\n    font-size: var(--xsmall-font-size);\n    color: var(--color-grey-7);\n  `;\n  \n  export const GameRating = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    font-size: var(--default-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n  `;\n","import { Image } from \"@chakra-ui/image\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Props } from \"./interfaces\";\nimport { GameGenre, GameRating, GameTitle, StyledBox, StyledLink, StyledSpan } from \"./styles\";\n\nexport const PopularGame: React.FC<Props> = props => (\n  <StyledLink to={props.link}>\n    <StyledBox>\n      <StyledSpan>Read<br/>More</StyledSpan>\n      <Image\n        fallbackSrc=\"https://via.placeholder.com/200\"\n        height=\"15rem\"\n        width=\"100%\"\n        fit=\"cover\"\n        src={props.src}\n        alt={props.alt} />\n\n      <Box\n        position=\"relative\"\n        width=\"var(--slide-width)\"\n        bg=\"var(--color-white)\"\n        p=\"1rem\"\n        border=\"1px solid var(--color-grey-3)\"\n        zIndex=\"10\">\n        <GameTitle>{props.title}</GameTitle>\n        <GameGenre>{props.genre}</GameGenre>\n        <GameRating>{props.rating || 0}%</GameRating>\n      </Box>\n    </StyledBox>\n  </StyledLink>\n)\n","import { Input } from '@chakra-ui/input';\nimport styled from 'styled-components';\n\nexport const StyledInput = styled(Input).attrs({\n  type: \"text\",\n  placeholder: \"Search\"\n})`\n  && {\n    font-size: var(--medium-font-size);\n    padding: 1.5rem;\n  \n    &:focus {\n      border-color: transparent;\n      box-shadow: none;\n      background-color: var(--color-white);\n    }\n  }\n`;","import { InputGroup, InputRightAddon } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport { StyledInput } from './styles';\n\nexport const Search: React.FC = () => (\n  <InputGroup maxW=\"28rem\">\n    <StyledInput bgColor=\"var(--color-grey)\" />\n    <InputRightAddon\n      pointerEvents=\"none\"\n      p=\"1.5rem\" \n      children={<SearchIcon boxSize=\"1.5rem\"/>} />\n  </InputGroup>\n)","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport styled, { css } from \"styled-components\";\n\nexport const Heading = styled.h2`\n  position: relative;\n  font-size: var(--default-font-size);\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin: 2rem 0;\n  text-transform: uppercase;\n  z-index: -10;\n\n  :before {\n    position: absolute;\n    bottom: -1rem;\n    left: 0;\n    content: '';\n    width: 5rem;\n    height: 2px;\n    background-color: var(--color-accent-3);\n  }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n  display: flex;\n  overflow: hidden;\n`;\n\nexport const StyledSpan = styled.span<{id: string}>`\n  position: absolute;\n  top: 0;\n  left: ${props => props.id === 'left' && \"var(--default-slides-spacing)\"};\n  right: ${props => props.id === 'right' && \"var(--default-slides-spacing)\"};\n  height: 100%;\n  cursor: pointer;\n  z-index: 11;\n\n  &:hover svg {\n    background-color: var(--color-white);\n    color: var(--color-black);\n  }\n`;\n\nconst styledIcon = css`\n  && { color: white; }\n    \n    position: relative;\n    top: 25%;\n    background-color: rgba(0, 0, 0, 0.6);\n    font-size: 4rem;\n`;\n\nexport const StyledIconLeft = styled(ChevronLeftIcon)`\n  ${styledIcon}\n`;\n\nexport const StyledIconRight = styled(ChevronRightIcon)`\n  ${styledIcon}\n`;","import { Box, HStack } from \"@chakra-ui/layout\";\nimport { useContext, useState } from \"react\";\nimport { IgdbContext } from \"../../../store/IgdbContext\";\nimport { PopularGame } from \"../../\";\nimport { ShiftData } from \"./interfaces\";\nimport { Heading, StyledBox, StyledIconLeft, StyledIconRight, StyledSpan } from \"./styles\";\n\nexport const PopularSection: React.FC = () => {\n  const [shiftValue, setShiftValue] = useState(0);\n  const [isSliderReady, setIsSliderReady] = useState(true);\n\n  const igdbContext = useContext(IgdbContext);\n  const fetchedGames = [...igdbContext.games];\n\n  const shiftSlidesContainer = (shiftData: ShiftData) => shiftData.container.style.left=`${shiftData.translate * -1 - shiftData.slide}px`;\n\n  const updateSlides = (direction: string) => {\n    let updatedGames: {}[] = [];\n    const copiedGame = direction === 'left'\n      ? fetchedGames.splice(-1, 1)\n      : fetchedGames.splice(0, 1);\n\n    updatedGames = direction === 'left'\n      ? [...copiedGame, ...fetchedGames]\n      : [...fetchedGames, ...copiedGame];\n      \n      igdbContext.setGames(updatedGames);\n    }\n    \n  const slideHandler = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    if (!isSliderReady) return;\n    setIsSliderReady(false);\n    \n    const slidesContainer = document.getElementById('slides_container')!;\n    const slideWidth = slidesContainer?.offsetWidth / fetchedGames.length;\n    const slideDirection= e.currentTarget.getAttribute('id')!;\n    \n    const translateValue = slideDirection === 'left'\n    ? shiftValue + slideWidth\n    : shiftValue - slideWidth;\n    \n    slidesContainer.style.transform=`translateX(${translateValue}px)`;\n    setShiftValue(translateValue);\n    \n    setTimeout(() => {\n      const ShiftData = {\n        container: slidesContainer,\n        translate: translateValue,\n        slide: slideWidth\n      }\n      \n      updateSlides(slideDirection);\n      shiftSlidesContainer(ShiftData);\n      setIsSliderReady(true);\n    }, 500)\n  }\n\n  return (\n    <Box>\n      <Heading>Popular games right now</Heading>\n      <StyledBox>\n        <StyledSpan id=\"left\" onClick={(e) => slideHandler(e)}>\n          <StyledIconLeft />\n        </StyledSpan>\n        <StyledSpan id=\"right\" onClick={(e) => slideHandler(e)}>\n          <StyledIconRight />\n        </StyledSpan>\n        <HStack\n            left=\"calc(var(--slide-width) * -1 - var(--default-slides-spacing) * 2)\"\n            id=\"slides_container\"\n            position=\"relative\"\n            transition=\"transform .5s ease\"\n            direction=\"row\"\n            spacing=\"0\">\n            {igdbContext.games.map(game => (\n              <PopularGame\n                key={game.id}\n                link={`games/${game.slug}`}\n                src={game.background_image}\n                alt={game.name}\n                title={game.name}\n                genre={game.genres[0].name}\n                rating={game.metacritic} />\n            ))}\n          </HStack>\n      </StyledBox>\n    </Box>\n  );\n}","import styled from \"styled-components\";\n\nexport const MainHeading = styled.h1`\n  font-size: var(--big-font-size);\n`;\n\nexport const HeadingSpan = styled.span`\n  font-style: italic;\n`;","import { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport Icon from \"@chakra-ui/icon\";\nimport { IoMdOptions } from 'react-icons/io';\nimport { PersonalizeModal } from \"../../\";\nimport { HeadingSpan, MainHeading } from \"./styles\";\n\nexport const WelcomeSection: React.FC = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const toggleModalHandler = () => setIsModalVisible(prevState => !prevState);\n\n  return (\n    <Flex\n      justifyContent=\"space-between\"\n      padding=\"2rem 0\">\n      <MainHeading>\n        Welcome to the guiding star in <HeadingSpan>your </HeadingSpan>\n        world of gaming\n      </MainHeading>\n      <Button\n        rightIcon={<Icon as={IoMdOptions}\n        color=\"var(--color-accent-dark)\" />}\n        padding=\"3rem 0\"\n        marginTop=\"-1.3rem\"\n        fontSize=\"var(--medium-font-size-2)\"\n        fontWeight=\"300\"\n        bg=\"var(--color-background)\"\n        color=\"var(--color-grey-2)\"\n        cursor=\"pointer\"\n        _focus={{boxShadow: \"none\"}}\n        _active={{bg: \"transparent\"}}\n        _hover={{bg: \"transparent\"}}\n        \n        onClick={toggleModalHandler}>\n        Personalize\n      </Button>\n      {isModalVisible && <PersonalizeModal\n                            isVisible={isModalVisible}\n                            onCloseModal={toggleModalHandler} />}\n    </Flex>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  color: var(--color-black);\n  font-size: var(--small-font-size);\n  font-weight: 700;\n\n  &:hover > span { background-color: var(--color-grey-5); }\n`;\n\nexport const Input = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n\n  &:checked + span {\n    background-color: var(--color-accent-2);\n    border-color: var(--color-accent-2);\n  }\n`;\n\nexport const Span = styled.span`\n  position: relative;\n  margin-right: 1rem;\n  width: 2rem;\n  height: 2rem;\n  border: 2px solid var(--color-grey-5);\n  border-radius: 13%;\n`;","import { Box } from \"@chakra-ui/react\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport { Label, Input, Span } from \"./styles\";\n\nexport const Checkbox: React.FC<{label: string}> = props => (\n  <Box\n    position=\"relative\"\n    flexBasis=\"50%\"\n    marginBottom=\"1rem\">\n    <Label>\n      <Input />\n      <Span>\n        <CheckIcon \n          position=\"absolute\"  \n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\" \n          width=\"1.7rem\"\n          height=\"1.7rem\"\n          color=\"var(--color-white)\" />\n      </Span>\n      {props.label}\n      </Label>\n  </Box>\n)","import { Button } from \"@chakra-ui/button\";\nimport { Props } from \"./interfaces\";\n\nconst defaultFocusValue = {boxShadow: \"none\"};\nconst defaultActiveValue = {bg: \"var(--color-accent-dark)\"};\nconst defaultHoverValue = {bg: \"var(--color-accent-dark)\"};\n\nexport const DefaultButton: React.FC<Props> = props => (\n  <Button\n    alignSelf={props.alignSelf || \"stretch\"}\n    p={props.p || \"auto\"}\n    marginLeft={props.marginLeft || \"auto\"}\n    m={props.m}\n    height=\"auto\"\n    cursor=\"pointer\"\n    borderRadius={props.borderRadius || \"0\"}\n    bg={props.bg || \"var(--color-accent)\"}\n    border={props.border || \"none\"}\n    color={props.color || \"var(--color-white)\"}\n    fontSize={props.fontSize || \"var(--xsmall-font-size)\"}\n    href={props.link}\n    _focus={props._focus || defaultFocusValue}\n    _active={props._active || defaultActiveValue}\n    _hover={props._hover || defaultHoverValue}\n\n    as={props.kind}\n    leftIcon={props.leftIcon}\n    onClick={props.onClickButton}>\n    {props.children}\n  </Button>\n)","import { Box } from '@chakra-ui/layout';\nimport styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  background-color: var(--color-primary);\n`;\n\nexport const StyledBox = styled(Box)`\n  width: var(--default-width);\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  margin: auto;\n`;\n","import { DefaultButton, Logo, Navigation, Search } from '../../components';\nimport { Icon } from '@chakra-ui/icon';\nimport { BsTwitch } from 'react-icons/bs';\nimport { StyledBox, StyledHeader } from './styles';\n\nexport const Header: React.FC = () => (\n  <StyledHeader>\n    <StyledBox>\n      <Logo />\n      <Search />\n      <Navigation />\n      <DefaultButton\n        kind=\"a\"\n        leftIcon={<Icon as={BsTwitch} />}\n        link=\"https://www.igdb.com/oauth/twitch\">\n        LOGIN WITH TWITCH</DefaultButton>\n    </StyledBox>\n  </StyledHeader>\n)","import { Fragment } from 'react';\nimport { Header } from '../../components';\n    \nexport const Layout: React.FC = props => (\n  <Fragment>\n    <Header />\n    {props.children}\n  </Fragment>\n)"],"sourceRoot":""}