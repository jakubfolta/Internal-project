{"version":3,"sources":["styles/global.ts","components/UI/Button/Button.tsx","components/Logo/styles.ts","components/Logo/Logo.tsx","components/Navigation/NavigationSubItem.tsx","components/Navigation/Navigation.tsx","components/Search/styles.ts","components/Search/Search.tsx","containers/Header/styles.ts","containers/Header/Header.tsx","containers/Layout/Layout.tsx","components/Backdrop/Backdrop.tsx","components/UI/Checkbox/styles.ts","components/UI/Checkbox/Checkbox.tsx","components/PersonalizeModal/styles.ts","components/PersonalizeModal/PersonalizeModal.tsx","components/Sections/WelcomeSection/styles.ts","components/Sections/WelcomeSection/WelcomeSection.tsx","network/apiClient.ts","store/IgdbContext.tsx","shared/utility.ts","network/lib/games.ts","components/PopularGame/styles.ts","components/PopularGame/PopularGame.tsx","components/Sections/PopularSection/styles.ts","components/Sections/PopularSection/PopularSection.tsx","components/MainPage/Mainpage.tsx","App.tsx","index.tsx"],"names":["theme","extendTheme","colors","white","GlobalStyle","createGlobalStyle","defaultFocusValue","boxShadow","defaultActiveValue","bg","defaultHoverValue","DefaultButton","props","alignSelf","p","marginLeft","height","cursor","borderRadius","border","color","fontSize","href","link","_focus","_active","_hover","as","kind","leftIcon","onClick","onClickButton","children","StyledLink","styled","Link","Logo","to","NavigationSubItem","marginTop","items","map","item","icon","padding","name","hasDivider","Navigation","useState","Star","subItems","AtSign","navItems","isLazy","autoSelect","Button","rightIcon","ChevronDown","variant","textTransform","StyledInput","Input","attrs","type","placeholder","Search","maxW","bgColor","pointerEvents","boxSize","StyledHeader","header","StyledBox","Box","Header","BsTwitch","Layout","Backdrop","position","top","left","width","zIndex","onClickBackdrop","Label","label","input","Span","span","Checkbox","flexBasis","marginBottom","Check","transform","Heading","h2","Description","PersonalizeModal","platforms","onCloseModal","flexDirection","minWidth","Close","right","w","h","flexWrap","platform","borderColor","MainHeading","h1","HeadingSpan","WelcomeSection","isModalVisible","setIsModalVisible","toggleModalHandler","currentState","justifyContent","IoMdOptions","fontWeight","responseBody","response","data","axiosClient","axios","create","baseURL","IgdbContext","React","createContext","games","error","slide","e","IgdbContextProvider","filter","fetchedGames","setFetchedGames","isFetchingError","setIsFetchingError","shiftValue","setShiftValue","weekTimePeriod","currentDate","Date","getFullYear","getMonth","slice","getDate","currentYear","currentMonth","currentDay","sevenDaysAgoDay","weekAgoDate","setDate","weekAgoMonth","weekAgoDay","setWeekPeriodTimeString","filterData","query","useEffect","endpoint","get","then","fetchGamesData","lastWeekPopularGames","results","console","log","catch","errorMessage","contextValue","slideDirection","currentTarget","getAttribute","slidesContainer","document","getElementById","slideWidth","offsetWidth","length","translateValue","style","Provider","value","div","StyledSpan","GameTitle","h3","GameGenre","GameRating","PopularGame","fallbackSrc","objectFit","src","alt","title","genre","rating","id","styledIcon","css","StyledIconLeft","ChevronLeftIcon","StyledIconRight","ChevronRightIcon","PopularSection","igdbContext","useContext","transition","direction","spacing","game","background_image","genres","metacritic","MainPage","maxWidth","m","App","routes","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4f938ed.chunk.js","sourcesContent":["import { extendTheme } from '@chakra-ui/react';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const theme = extendTheme({\n  colors: { white: \"var(--color-background)\" }\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    padding: 0;\n    margin: 0;\n    box-sizing: inherit;\n  }\n\n  html { font-size: 62.5%; } // 1rem = 10px \n  body { box-sizing: border-box; }\n  \n  :root {\n    --default-slides-amount: 4;\n    --default-slides-spacing: .5rem;\n    --default-width: 1152px;\n    --main-page-padding: 1rem;\n    \n    --slide-width: calc(\n        (var(--default-width) - var(--main-page-padding) * 2) \n      / var(--default-slides-amount) - var(--default-slides-spacing) * 2\n    );\n    // Colors\n    --color-primary: #323A45;\n    --color-background: #FAFAFA;\n    --color-white: #FFFFFF;\n    --color-black: #444;\n    --color-black-2: #555;\n    --color-grey: hsl(0, 0%, 90%);\n    --color-grey-2: #858585;\n    --color-grey-3: #ECECEC;\n    --color-grey-4: #34373b;\n    --color-grey-5: #BDC3C7;\n    --color-grey-6: #e6e6e6;\n    --color-grey-7: #bfbfbf;\n    --color-accent: #9047FF;\n    --color-accent-2: #9147ff;\n    --color-accent-3: #f1c40f;\n    --color-accent-dark: #7214FF;\n    // Fonts\n    --xsmall-font-size: 1.2rem;\n    --small-font-size: 1.4rem;\n    --default-font-size: 1.6rem;\n    --medium-font-size: 1.8rem;\n    --medium-font-size-2: 2rem;\n    --big-font-size: 2.4rem;\n    --xl-font-size: 2.8rem;\n  }\n`;\n\nexport default GlobalStyle;\n","import { Button } from \"@chakra-ui/button\";\nimport { Props } from \"./interfaces\";\n\nconst defaultFocusValue = {boxShadow: \"none\"};\nconst defaultActiveValue = {bg: \"var(--color-accent-dark)\"};\nconst defaultHoverValue = {bg: \"var(--color-accent-dark)\"};\n\nexport const DefaultButton: React.FC<Props> = props => (\n  <Button\n    alignSelf=\"stretch\"\n    p={props.p || \"auto\"}\n    marginLeft={props.marginLeft || \"auto\"}\n    height=\"auto\"\n    cursor=\"pointer\"\n    borderRadius={props.borderRadius || \"0\"}\n    bg={props.bg || \"var(--color-accent)\"}\n    border={props.border || \"none\"}\n    color={props.color || \"var(--color-white)\"}\n    fontSize={props.fontSize || \"var(--xsmall-font-size)\"}\n    href={props.link}\n    _focus={props._focus || defaultFocusValue}\n    _active={props._active || defaultActiveValue}\n    _hover={props._hover || defaultHoverValue}\n\n    as={props.kind}\n    leftIcon={props.leftIcon}\n    onClick={props.onClickButton}>\n    {props.children}\n  </Button>\n)","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 1rem 2rem;\n  color: var(--color-white);\n  font-size: 2rem;\n`;","import { Box } from '@chakra-ui/react';\nimport { StyledLink } from './styles';\n\nexport const Logo: React.FC = () => (\n    <Box >\n      <StyledLink to=\"/\">Logo</StyledLink>\n    </Box>\n)\n","import { Fragment } from \"react\";\nimport { MenuList, MenuItem, MenuDivider } from \"@chakra-ui/menu\";\nimport { Props } from \"./interfaces\";\n\nexport const NavigationSubItem: React.FC<Props> = props => (\n  <MenuList\n    bg=\"var(--color-accent)\"\n    color=\"var(--color-white)\"\n    fontSize=\"var(--default-font-size)\"\n    marginTop=\"-0.8rem\"\n    border=\"none\"\n    borderRadius=\"0\">\n    {\n      props.items.map(item => (\n        <Fragment key={item.name}>\n          <MenuItem \n          icon={item.icon}\n          _focus={{bg: \"var(--color-accent-dark)\"}}\n          padding=\"1rem 2rem\">\n          {item.name}</MenuItem>\n          {item.hasDivider && <MenuDivider />}\n        </Fragment>\n      ))\n    }\n  </MenuList>\n)","import { Fragment, useState } from 'react';\nimport { Menu, MenuButton } from '@chakra-ui/menu';\nimport { AtSignIcon, StarIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport { Button } from '@chakra-ui/button';\nimport { NavigationSubItem } from './NavigationSubItem';\n\nexport const Navigation: React.FC = () => {\n  const [navigationItems] = useState([\n      {\n        name: \"Games\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Discover\", icon: <AtSignIcon /> },\n          { name: \"Reviews\", icon: <AtSignIcon /> },\n          { name: \"Advanced Search\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Coming Soon\", icon: <AtSignIcon /> },\n          { name: \"Recently Released\", icon: <AtSignIcon /> },\n          { name: \"Top 100\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Add Game\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Database\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Games\", icon: <AtSignIcon /> },\n          { name: \"Platforms\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Developer API\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Community\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Karma Hunters\", icon: <AtSignIcon /> },\n          { name: \"Discord\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Help\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"About IGDB\", icon: <AtSignIcon /> },\n          { name: \"Contributions\", icon: <AtSignIcon /> },\n          { name: \"UserVoice\", icon: <AtSignIcon /> },\n          { name: \"Contact\", icon: <AtSignIcon /> }\n        ]\n      }\n    ]);\n\n  const navItems = navigationItems.map( item => \n    <Fragment key={item.name}>\n      <Menu isLazy autoSelect={false}>\n        <MenuButton\n            as={Button}\n            leftIcon={item.icon}\n            rightIcon={<ChevronDownIcon />}\n            variant=\"flushed\"\n            alignSelf=\"stretch\"\n            height=\"auto\"\n            color=\"var(--color-white)\"\n            fontSize=\"var(--xsmall-font-size)\"\n            textTransform=\"uppercase\"\n            borderRadius=\"0\"\n            p=\"0 1.5rem\"\n            _focus={{boxShadow: \"none\"}}\n            _active={{\n              color: \"var(--color-white)\",\n              bg: \"var(--color-accent)\",\n              boxShadow: \"none\"}}\n            _hover={{color: \"#7214FF\"}}>\n            {item.name}\n        </MenuButton>\n        <NavigationSubItem items={item.subItems} />\n      </Menu>\n    </Fragment>\n  )\n\n  return (\n    <Fragment>\n      {navItems}\n    </Fragment>\n  );\n}","import { Input } from '@chakra-ui/input';\nimport styled from 'styled-components';\n\nexport const StyledInput = styled(Input).attrs({\n  type: \"text\",\n  placeholder: \"Search\"\n})`\n  && {\n    font-size: var(--medium-font-size);\n    padding: 1.5rem;\n  \n    &:focus {\n      border-color: transparent;\n      box-shadow: none;\n      background-color: var(--color-white);\n    }\n  }\n`;","import { InputGroup, InputRightAddon } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport { StyledInput } from './styles';\n\nexport const Search: React.FC = () => (\n  <InputGroup maxW=\"28rem\">\n    <StyledInput bgColor=\"var(--color-grey)\" />\n    <InputRightAddon\n      pointerEvents=\"none\"\n      p=\"1.5rem\" \n      children={<SearchIcon boxSize=\"1.5rem\"/>} />\n  </InputGroup>\n)","import { Box } from '@chakra-ui/layout';\nimport styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  background-color: var(--color-primary);\n`;\n\nexport const StyledBox = styled(Box)`\n  width: var(--default-width);\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  margin: auto;\n`;\n","import { DefaultButton } from '../../components/UI/Button/Button';\nimport { Icon } from '@chakra-ui/icon';\nimport { BsTwitch } from 'react-icons/bs';\nimport { Logo } from '../../components/Logo/Logo';\nimport { Navigation } from '../../components/Navigation/Navigation';\nimport { Search } from '../../components/Search/Search';\nimport { StyledBox, StyledHeader } from './styles';\n\nexport const Header: React.FC = () => (\n    <StyledHeader>\n      <StyledBox>\n        <Logo />\n        <Search />\n        <Navigation />\n        <DefaultButton\n          kind=\"a\"\n          leftIcon={<Icon as={BsTwitch} />}\n          link=\"https://www.igdb.com/oauth/twitch\">\n          LOGIN WITH TWITCH</DefaultButton>\n      </StyledBox>\n    </StyledHeader>\n)","import { Fragment } from 'react';\nimport { Header } from '../Header/Header';\n    \nexport const Layout: React.FC = props => (\n  <Fragment>\n    <Header />\n    {props.children}\n  </Fragment>\n)","import { Box } from \"@chakra-ui/layout\";\nimport React from \"react\";\n\nexport const Backdrop: React.FC<{onClickBackdrop: React.MouseEventHandler}> = props => (\n  <Box\n    position=\"absolute\"\n    top=\"0\"\n    left=\"0\"\n    height=\"100vh\"\n    width=\"100%\"\n    bg=\"var(--color-white)\"\n    zIndex=\"20\"\n\n    onClick={props.onClickBackdrop}>\n  </Box>\n) ","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  color: var(--color-black);\n  font-size: var(--small-font-size);\n  font-weight: 700;\n\n  &:hover > span { background-color: var(--color-grey-5); }\n`;\n\nexport const Input = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n\n  &:checked + span {\n    background-color: var(--color-accent-2);\n    border-color: var(--color-accent-2);\n  }\n`;\n\nexport const Span = styled.span`\n  position: relative;\n  margin-right: 1rem;\n  width: 2rem;\n  height: 2rem;\n  border: 2px solid var(--color-grey-5);\n  border-radius: 13%;\n`;","import { Box } from \"@chakra-ui/react\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport { Label, Input, Span } from \"./styles\";\n\nexport const Checkbox: React.FC<{label: string}> = props => (\n  <Box\n    position=\"relative\"\n    flexBasis=\"50%\"\n    marginBottom=\"1rem\">\n    <Label>\n      <Input />\n      <Span>\n        <CheckIcon \n          position=\"absolute\"  \n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\" \n          width=\"1.7rem\"\n          height=\"1.7rem\"\n          color=\"var(--color-white)\" />\n      </Span>\n      {props.label}\n      </Label>\n  </Box>\n)","import styled from \"styled-components\";\nimport { StyledComponentsProps } from \"./interfaces\";\n\nexport const Heading = styled.h2`\n  font-size: var(--big-font-size);\n  font-weight: 500;\n`;\n\nexport const Description = styled.p`\n  margin: 2.5rem 0;\n  font-size: ${(props: StyledComponentsProps) => props.fontSize || \"var(--medium-font-size)\"};\n  font-weight: 300;\n  color: ${(props: StyledComponentsProps) => props.color || \"var(--color-grey-2)\"};\n`;","import { Fragment, useState } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/layout\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { Backdrop } from \"../Backdrop/Backdrop\";\nimport { Checkbox } from \"../UI/Checkbox/Checkbox\";\nimport { DefaultButton } from \"../UI/Button/Button\";\nimport { Description, Heading } from \"./styles\";\n\nexport const PersonalizeModal: React.FC<{onCloseModal: () => void}> = props => {\n  const [platforms] = useState([\n    'PC (Microsoft Windows)',\n    'Xbox One',\n    'PlayStation 4',\n    'Nintendo Switch',\n    'Mac',\n    'Linux',\n    'iOS',\n    'Android',\n    'Nintendo 3DS',\n    'Playstation Vita'\n  ]);\n\n  return (\n    <Fragment>\n      <Backdrop onClickBackdrop={props.onCloseModal} />\n      <Flex\n        position=\"absolute\"\n        top=\"50vh\"\n        left=\"50vw\"\n        flexDirection=\"column\"\n        transform=\"translate(-50%, -50%)\"\n        minWidth=\"90rem\"\n        zIndex=\"20\">\n        <Box>\n          <Heading>Personalize</Heading>\n          <CloseIcon \n            position=\"absolute\"\n            top=\"0\"\n            right=\"0\"\n            w=\"3.5rem\"\n            h=\"3.5rem\"\n            padding=\".5rem\"\n            cursor=\"pointer\"\n            borderRadius=\"50%\"             \n            _hover={{bg: \"var(--color-grey-3)\"}}\n            \n            onClick={props.onCloseModal} />\n          <Description>Select what you want to see on your homepage</Description>\n        </Box>\n        <Box>\n          <Description\n            fontSize=\"var(--default-font-size)\"\n            color=\"var(color-grey-4)\">Platforms you own:</Description>\n          <Flex\n            flexWrap=\"wrap\">\n            {platforms.map(platform => (\n              <Checkbox key={platform} label={platform} />\n            ))}            \n          </Flex>\n          <Flex marginTop=\"1rem\">\n          <DefaultButton\n              p=\"1.3rem 4rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-grey-2)\"\n              bg=\"var(--color-white)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-grey-6)\"}}\n              _active={{bg: \"var(--color-grey-6)\"}}\n              _hover={{bg: \"var(--color-grey-6)\"}}\n              onClickButton={props.onCloseModal}>\n              Cancel\n            </DefaultButton>\n            <DefaultButton\n              p=\"1.3rem 4rem\"\n              marginLeft=\".5rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-white)\"\n              bg=\"var(--color-accent-2)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-accent-dark)\"}}\n              _active={{bg: \"var(--color-accent-dark)\"}}\n              _hover={{bg: \"var(--color-accent-dark)\",\n                       borderColor: \"var(--color-accent-dark)\"}}\n              onClickButton={props.onCloseModal}>\n              Save\n            </DefaultButton>\n          </Flex>\n        </Box>\n      </Flex>\n    </Fragment>\n  );\n}","import styled from \"styled-components\";\n\nexport const MainHeading = styled.h1`\n  font-size: var(--big-font-size);\n`;\n\nexport const HeadingSpan = styled.span`\n  font-style: italic;\n`;","import { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport Icon from \"@chakra-ui/icon\";\nimport { IoMdOptions } from 'react-icons/io';\nimport { PersonalizeModal } from \"../../PersonalizeModal/PersonalizeModal\";\nimport { HeadingSpan, MainHeading } from \"./styles\";\n\nexport const WelcomeSection: React.FC = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const toggleModalHandler = () => setIsModalVisible((currentState) => !currentState);\n\n  return (\n    <Flex\n      justifyContent=\"space-between\"\n      padding=\"2rem 0\">\n      <MainHeading>\n        Welcome to the guiding star in <HeadingSpan>your </HeadingSpan>\n        world of gaming\n      </MainHeading>\n      <Button\n        rightIcon={<Icon as={IoMdOptions}\n                        color=\"var(--color-accent-dark)\" />}\n        padding=\"3rem 0\"\n        marginTop=\"-1.3rem\"\n        fontSize=\"var(--medium-font-size-2)\"\n        fontWeight=\"300\"\n        bg=\"var(--color-white)\"\n        color=\"var(--color-grey-2)\"\n        cursor=\"pointer\"\n        _focus={{boxShadow: \"none\"}}\n        _active={{bg: \"transparent\"}}\n        _hover={{bg: \"transparent\"}}\n        \n        onClick={toggleModalHandler}>\n        Personalize\n      </Button>\n      {isModalVisible && <PersonalizeModal \n                      onCloseModal={toggleModalHandler} />}\n    </Flex>\n  );\n}\n","import axios, { AxiosResponse } from \"axios\";\n\nconst apiKey = '6cb0dad0b2204442bfdfda2715ca7de1';\n\nexport const responseBody = (response: AxiosResponse) => response.data;\nexport const setQuery = (filter?: string) => {\n  const query = `?key=${apiKey}${filter ?? '' }`;\n  \n  return query;\n} \n\nexport const axiosClient = axios.create({\n  baseURL: 'https://api.rawg.io/api'\n});\n\n// export const axiosClient = ((token: string) => {\n//   return axios.create({\n//     baseURL: 'https://api.igdb.com/v4',\n//     headers: {\n//       'Accept': 'application.json',\n//       'Content-Type': 'application.json',\n//       'Client-ID': clientId,\n//       'Authorization': `Bearer ${token}`\n//     }\n//   });\n// });\n\n// export const request = {\n//   post: (url: string, token: string) => axiosClient.post()\n//   //\"Property 'post' does not exist on type '(token: string) => AxiosInstance'.\"\n\n//   //How to add this 'post' method?\n// }\n\n","import React, { useEffect, useState } from \"react\";\nimport { setQuery } from \"../network/apiClient\";\nimport { fetchGamesData } from \"../network/lib/games\";\nimport { setWeekPeriodTimeString } from \"../shared/utility\";\nimport { Context } from \"./interfaces\";\n\nexport const IgdbContext = React.createContext<Context>({\n  games: [],\n  error: false,\n  slide: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {}\n});\n\nexport const IgdbContextProvider: React.FC = props => {\n  const [fetchedGames, setFetchedGames] = useState([]);\n  const [isFetchingError, setIsFetchingError] = useState<boolean | string>(false);\n  const [shiftValue, setShiftValue] = useState(0);\n\n  const weekTimePeriod: string = setWeekPeriodTimeString();\n  const filterData = `&dates=${weekTimePeriod}&ordering=-added&page_size=10`;\n  const query: string = setQuery(filterData);\n\n  useEffect(() => {\n    fetchGamesData('/games', query)\n      .then(response => {\n        const lastWeekPopularGames = response.results;\n        console.log(lastWeekPopularGames);\n        setFetchedGames(lastWeekPopularGames);\n        })\n\n      .catch(error => {\n        const errorMessage: string = error.response.data.error;\n\n        setIsFetchingError(errorMessage);\n      })\n  }, []);\n\n\n  const slideHandler = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    const slideDirection: string = e.currentTarget.getAttribute('id')!\n    const slidesContainer = document.getElementById('slides_container')!;\n    const slideWidth: number = slidesContainer.offsetWidth / fetchedGames.length;\n\n    const translateValue: number = slideDirection === 'left'\n      ? shiftValue + slideWidth\n      : shiftValue - slideWidth;\n    \n    slidesContainer.style.transform=`translateX(${translateValue}px)`;\n    setShiftValue(translateValue)\n    // console.log(translateValue, isNegativeNumber);\n  }\n\n  const contextValue: Context = {\n    games: fetchedGames, \n    error: isFetchingError,\n    slide: slideHandler\n  };\n  \n  return <IgdbContext.Provider value={contextValue}>\n          {props.children}\n         </IgdbContext.Provider>;\n}","export const setWeekPeriodTimeString = () => {\n  const currentDate = new Date();\n\n  const [currentYear, currentMonth, currentDay] = [\n    currentDate.getFullYear(),\n    (`0${currentDate.getMonth() + 1}`).slice(-2),\n    (`0${currentDate.getDate()}`).slice(-2)\n  ];\n  \n  const sevenDaysAgoDay = currentDate.getDate() - 7;\n  const weekAgoDate = new Date(currentDate.setDate(sevenDaysAgoDay));\n  \n  const [weekAgoYear, weekAgoMonth, weekAgoDay] = [\n    weekAgoDate.getFullYear(),\n    (`0${weekAgoDate.getMonth() + 1}`).slice(-2),\n    (`0${weekAgoDate.getDate()}`).slice(-2)\n  ];\n\n  const weekTimePeriod = `${weekAgoYear}-${weekAgoMonth}-${weekAgoDay},${currentYear}-${currentMonth}-${currentDay}`;\n\n  return weekTimePeriod;\n}","import {  axiosClient, responseBody } from \"../apiClient\"\n\nexport const fetchGamesData = ((endpoint: string, query: string) => {\n  return axiosClient.get(`${endpoint}${query}`).then(responseBody);\n})","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  flex: 1 0 var(--slide-width);\n\n  && { margin: 0 var(--default-slides-spacing); }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, rgba(145,71,255,0.9), rgba(43,187,228,0.9));\n  }\n  \n  &:hover::after,\n  &:hover span { display: block; }\n  `;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: none;\n  color: var(--color-white);\n  font-size: var(--xl-font-size);\n  z-index: 1;\n  `;\n  \n  export const GameTitle = styled.h3`\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: var(--small-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n    margin-bottom: 2px;\n  `;\n  \n  export const GameGenre = styled.span`\n    font-size: var(--xsmall-font-size);\n    color: var(--color-grey-7);\n  `;\n  \n  export const GameRating = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    font-size: var(--default-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n  `;\n","import { Image } from \"@chakra-ui/image\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Props } from \"./interfaces\";\nimport { GameGenre, GameRating, GameTitle, StyledBox, StyledLink, StyledSpan } from \"./styles\";\n\nexport const PopularGame: React.FC<Props> = props => (\n  <StyledLink to={props.link}>\n    <StyledBox>\n      <StyledSpan>Read<br/>More</StyledSpan>\n      <Image\n        fallbackSrc=\"https://via.placeholder.com/250\"\n        objectFit=\"cover\"\n        src={props.src}\n        alt={props.alt} />\n      <Box\n        position=\"relative\"\n        width=\"var(--slide-width)\"\n        bg=\"var(--color-white)\"\n        p=\"1rem\"\n        border=\"1px solid var(--color-grey-3)\"\n        zIndex=\"10\">\n        <GameTitle>{props.title}</GameTitle>\n        <GameGenre>{props.genre}</GameGenre>\n        <GameRating>{props.rating || 0}%</GameRating>\n      </Box>\n    </StyledBox>\n  </StyledLink>\n)\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport styled, { css } from \"styled-components\";\n\nexport const Heading = styled.h2`\n  position: relative;\n  font-size: var(--default-font-size);\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin: 2rem 0;\n  text-transform: uppercase;\n  z-index: -10;\n\n  :before {\n    position: absolute;\n    bottom: -1rem;\n    left: 0;\n    content: '';\n    width: 5rem;\n    height: 2px;\n    background-color: var(--color-accent-3);\n  }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n  display: flex;\n  overflow: hidden;\n`;\n\nexport const StyledSpan = styled.span<{id: string}>`\n  position: absolute;\n  top: 0;\n  left: ${props => props.id === 'left' && \"var(--default-slides-spacing)\"};\n  right: ${props => props.id === 'right' && \"var(--default-slides-spacing)\"};\n  height: 100%;\n  cursor: pointer;\n  z-index: 11;\n\n  &:hover svg {\n    background-color: var(--color-white);\n    color: var(--color-black);\n  }\n`;\n\nconst styledIcon = css`\n  && { color: white; }\n    \n    position: relative;\n    top: 25%;\n    background-color: rgba(0, 0, 0, 0.6);\n    font-size: 4rem;\n`;\n\nexport const StyledIconLeft = styled(ChevronLeftIcon)`\n  ${styledIcon}\n`;\n\nexport const StyledIconRight = styled(ChevronRightIcon)`\n  ${styledIcon}\n`;","import { Box, HStack } from \"@chakra-ui/layout\";\nimport { useContext } from \"react\";\nimport { IgdbContext } from \"../../../store/IgdbContext\";\nimport { PopularGame } from \"../../PopularGame/PopularGame\";\nimport { Heading, StyledBox, StyledIconLeft, StyledIconRight, StyledSpan } from \"./styles\";\n\nexport const PopularSection: React.FC = () => {\n  const igdbContext = useContext(IgdbContext);\n\n  return (\n    <Box>\n      <Heading>Popular games right now</Heading>\n      <StyledBox>\n        \n        <StyledSpan id=\"left\" onClick={(e) => igdbContext.slide(e)}>\n          <StyledIconLeft />\n        </StyledSpan>\n        <StyledSpan id=\"right\" onClick={(e) => igdbContext.slide(e)}>\n          <StyledIconRight />\n        </StyledSpan>\n\n        <HStack\n          id=\"slides_container\"\n          position=\"relative\"\n          transition=\"transform .5s ease\"\n          direction=\"row\"\n          spacing=\"0\">\n          {igdbContext.games.map(game => (\n            <PopularGame\n              key={game.id}\n              link={`games/${game.name}`}\n              src={game.background_image}\n              alt={game.name}\n              title={game.name}\n              genre={game.genres[0].name}\n              rating={game.metacritic} />\n          ))}\n        </HStack>\n      </StyledBox>\n    </Box>\n  );\n}","import { Box } from \"@chakra-ui/react\";\nimport { WelcomeSection } from '../../components/Sections/WelcomeSection/WelcomeSection';\nimport { PopularSection } from '../../components/Sections/PopularSection/PopularSection';\n\nexport const MainPage: React.FC = () => (\n  <Box \n    w=\"var(--default-width)\"\n    maxWidth=\"100%\"\n    m=\"auto\"\n    p=\"0 var(--main-page-padding)\">\n    <WelcomeSection />\n    <PopularSection />\n\n  </Box>\n)","import { Fragment } from 'react';\nimport GlobalStyle, { theme } from './styles/global';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Layout } from './containers/Layout/Layout';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { MainPage } from './components/MainPage/Mainpage';\n\nexport const App: React.FC = () => {\n  const routes =\n    <Switch>\n      <Route path=\"/discovery\" exact component={MainPage} />\n      {/* <Route path=`/${gameTitle}` exact component={GamePage} /> */}\n      <Redirect to=\"/discovery\" />\n    </Switch>;\n  \n  return (\n    <Fragment>\n      <ChakraProvider theme={theme}>\n        <GlobalStyle />\n        <Layout>\n          {routes}\n        </Layout>\n      </ChakraProvider>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { IgdbContextProvider } from './store/IgdbContext';\n\nReactDOM.render(\n  <IgdbContextProvider>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </IgdbContextProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}