{"version":3,"sources":["components/styles/global.ts","components/UI/Button/Button.tsx","components/Logo/Logo.tsx","components/Navigation/NavigationSubItem.tsx","components/Navigation/Navigation.tsx","components/Search/Search.tsx","containers/styles/Header.styled.tsx","containers/Header/Header.tsx","components/Backdrop/Backdrop.tsx","components/UI/Checkbox/Checkbox.tsx","components/PersonalizeModal/PersonalizeModal.tsx","components/WelcomeSection/WelcomeSection.tsx","containers/Layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","defaultFocusValue","boxShadow","defaultActiveValue","bg","defaultHoverValue","DefaultButton","props","alignSelf","p","marginLeft","height","cursor","borderRadius","border","color","fontSize","href","link","_focus","_active","_hover","as","kind","leftIcon","onClick","clickHandler","children","StyledLink","styled","Link","Logo","to","NavigationSubItem","items","marginTop","map","item","icon","padding","name","hasDivider","Navigation","state","navigationItems","Star","subItems","AtSign","navItems","this","isLazy","autoSelect","Button","rightIcon","ChevronDown","variant","textTransform","Component","StyledInput","Input","Search","maxW","type","placeholder","bgColor","pointerEvents","boxSize","StyledHeader","header","Header","BsTwitch","Backdrop","position","top","left","width","Label","label","input","Span","span","DefaultCheckbox","flexBasis","marginBottom","Check","transform","Heading","h2","Description","PersonalizeModal","useState","platforms","closeModalHandler","flexDirection","minWidth","Close","right","w","h","flexWrap","platform","borderColor","MainHeading","h1","HeadingSpan","WelcomeSection","showModal","setShowModal","toggleModalVisible","currentState","justifyContent","IoMdOptions","fontWeight","LayoutBox","Box","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af71ce31.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    padding: 0;\n    margin: 0;\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: 62.5%; // 1rem = 10px\n  }\n  \n  body {\n    box-sizing: border-box;\n    font-size: var(---default-font-size);\n    \n  }\n  \n  :root {\n    // Colors\n    --color-primary: #323A45;\n    --color-white: #FFFFFF;\n    --color-black: #444;\n    --color-grey: hsl(0, 0%, 90%);\n    --color-grey-2: #858585;\n    --color-grey-3: #ECECEC;\n    --color-grey-4: #34373b;\n    --color-grey-5: #BDC3C7;\n    --color-grey-6: #e6e6e6;\n    --color-accent: #9047FF;\n    --color-accent-2: #9147ff;\n    --color-accent-dark: #7214FF;\n    // Fonts\n    --xsmall-font-size: 1.2rem;\n    --small-font-size: 1.4rem;\n    --default-font-size: 1.6rem;\n    --medium-font-size: 1.8rem;\n    --medium-font-size-2: 2rem;\n    --big-font-size: 2.4rem;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport { Button } from \"@chakra-ui/button\";\nimport { CSSObject } from \"@chakra-ui/styled-system\";\n\ninterface Props {\n  color?: string;\n  p?: string;\n  marginLeft?: string;\n  bg?: string;\n  border?: string;\n  borderRadius?: string;\n  fontSize?: string;\n  _focus?: CSSObject;\n  _active?: CSSObject;\n  _hover?: CSSObject;\n  kind?: any;\n  leftIcon?: any;\n  children?: string;\n  link?: string;\n  clickHandler?: React.MouseEventHandler;\n}\n\nconst defaultFocusValue = {boxShadow: \"none\"};\nconst defaultActiveValue = {bg: \"var(--color-accent-dark)\"};\nconst defaultHoverValue = {bg: \"var(--color-accent-dark)\"};\n\nexport const DefaultButton = (props: Props) => (\n  <Button\n    alignSelf=\"stretch\"\n    p={props.p || \"auto\"}\n    marginLeft={props.marginLeft || \"auto\"}\n    height=\"auto\"\n    cursor=\"pointer\"\n    borderRadius={props.borderRadius || \"0\"}\n    bg={props.bg || \"var(--color-accent)\"}\n    border={props.border || \"none\"}\n    color={props.color || \"var(--color-white)\"}\n    fontSize={props.fontSize || \"var(--xsmall-font-size)\"}\n    href={props.link}\n    _focus={props._focus || defaultFocusValue}\n    _active={props._active || defaultActiveValue}\n    _hover={props._hover || defaultHoverValue}\n\n    as={props.kind}\n    leftIcon={props.leftIcon}\n    onClick={props.clickHandler}>\n    {props.children}\n  </Button>\n)","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Box } from '@chakra-ui/react';\n\nconst StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 1rem 2rem;\n  color: var(--color-white);\n  font-size: 2rem;\n`;\n\nexport const Logo = () => (\n    <Box >\n      <StyledLink to=\"/\">Logo</StyledLink>\n    </Box>\n)\n","import React, { Fragment } from \"react\";\nimport { MenuList, MenuItem, MenuDivider } from \"@chakra-ui/menu\";\n\ninterface Items {\n  items: {\n    icon: any;\n    name: string;\n    hasDivider?: boolean;\n  }[]\n}\n\nexport const NavigationSubItem = ({items}: Items) => (\n  <MenuList\n    bg=\"var(--color-accent)\"\n    color=\"var(--color-white)\"\n    fontSize=\"var(--default-font-size)\"\n    marginTop=\"-0.8rem\"\n    border=\"none\"\n    borderRadius=\"0\">\n    {\n      items.map((item: any) => (\n        <Fragment>\n          <MenuItem \n          icon={item.icon}\n          _focus={{bg: \"var(--color-accent-dark)\"}}\n          padding=\"1rem 2rem\">\n          {item.name}</MenuItem>\n          {item.hasDivider && <MenuDivider />}\n        </Fragment>\n      ))\n    }\n  </MenuList>\n)","import React, { Component, Fragment } from 'react';\nimport { Menu, MenuButton } from '@chakra-ui/menu';\nimport { AtSignIcon, StarIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport { Button } from '@chakra-ui/button';\nimport { NavigationSubItem } from './NavigationSubItem';\n\nexport default class Navigation extends Component {\n  state = {\n    navigationItems: [\n      {\n        name: \"Games\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Discover\", icon: <AtSignIcon /> },\n          { name: \"Reviews\", icon: <AtSignIcon /> },\n          { name: \"Advanced Search\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Coming Soon\", icon: <AtSignIcon /> },\n          { name: \"Recently Released\", icon: <AtSignIcon /> },\n          { name: \"Top 100\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Add Game\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Database\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Games\", icon: <AtSignIcon /> },\n          { name: \"Platforms\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Developer API\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Community\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Karma Hunters\", icon: <AtSignIcon /> },\n          { name: \"Discord\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Help\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"About IGDB\", icon: <AtSignIcon /> },\n          { name: \"Contributions\", icon: <AtSignIcon /> },\n          { name: \"UserVoice\", icon: <AtSignIcon /> },\n          { name: \"Contact\", icon: <AtSignIcon /> }\n        ]\n      }\n    ]\n  }\n\n  render() {\n    const navItems = this.state.navigationItems.map( item => \n      <Fragment>\n        <Menu isLazy autoSelect={false}>\n          <MenuButton\n              as={Button}\n              leftIcon={item.icon}\n              rightIcon={<ChevronDownIcon />}\n              variant=\"flushed\"\n              alignSelf=\"stretch\"\n              height=\"auto\"\n              color=\"var(--color-white)\"\n              fontSize=\"var(--xsmall-font-size)\"\n              textTransform=\"uppercase\"\n              borderRadius=\"0\"\n              p=\"0 1.5rem\"\n              _focus={{boxShadow: \"none\"}}\n              _active={{\n                color: \"var(--color-white)\",\n                bg: \"var(--color-accent)\",\n                boxShadow: \"none\"}}\n              _hover={{color: \"#7214FF\"}}>\n              {item.name}\n          </MenuButton>\n          <NavigationSubItem items={item.subItems} />\n        </Menu>\n      </Fragment>\n    )\n\n    return(\n      <Fragment>\n        {navItems}\n      </Fragment>\n    );\n  }\n}","import React from 'react';\nimport { InputGroup, InputRightAddon, Input } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport styled from 'styled-components';\n\nconst StyledInput = styled(Input)`\n  && {\n    font-size: var(--medium-font-size);\n    padding: 1.5rem;\n  \n    &:focus {\n      border-color: transparent;\n      box-shadow: none;\n      background-color: var(--color-white);\n    }\n  }\n`;\n\nexport const Search = () => (\n  <InputGroup maxW=\"28rem\">\n    <StyledInput \n      type=\"text\"\n      placeholder=\"Search\"\n      bgColor=\"var(--color-grey)\"\n      \n       />\n    <InputRightAddon\n      pointerEvents=\"none\"\n      children={<SearchIcon boxSize=\"1.5rem\"/>}\n      p=\"1.5rem\" />\n  \n  </InputGroup>\n  )","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  background-color: var(--color-primary);\n  display: flex;\n  align-items: center;\n  padding: 0 18rem;\n`;\n","import React from 'react';\nimport { DefaultButton } from '../../components/UI/Button/Button';\nimport { Icon } from '@chakra-ui/icon';\nimport { BsTwitch } from 'react-icons/bs';\nimport { Logo } from '../../components/Logo/Logo';\nimport Navigation from '../../components/Navigation/Navigation';\nimport { Search } from '../../components/Search/Search';\nimport { StyledHeader } from '../styles/Header.styled';\n\nexport const Header = () => (\n    <StyledHeader>\n      <Logo />\n      <Search />\n      <Navigation />\n      <DefaultButton\n        kind=\"a\"\n        leftIcon={<Icon as={BsTwitch} />}\n        link=\"https://www.igdb.com/oauth/twitch\">\n        LOGIN WITH TWITCH</DefaultButton>\n    </StyledHeader>\n)","import React from \"react\";\nimport { Box } from \"@chakra-ui/layout\";\n\ninterface Props {\n  clickHandler: any;\n}\n\nexport const Backdrop = (props: Props) => (\n  <Box\n    position=\"absolute\"\n    top=\"0\"\n    left=\"0\"\n    height=\"100vh\"\n    width=\"100%\"\n    bg=\"var(--color-white)\"\n    \n    onClick={props.clickHandler}>\n  </Box>\n) ","import React from \"react\";\nimport { Box, Checkbox } from \"@chakra-ui/react\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  label: string;\n}\n\nconst Label = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  color: var(--color-black);\n  font-size: var(--small-font-size);\n  font-weight: 700;\n\n  &:hover > span { background-color: var(--color-grey-5); }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n\n  &:checked + span {\n    background-color: var(--color-accent-2);\n    border-color: var(--color-accent-2);\n  }\n`;\n\nconst Span = styled.span`\n  position: relative;\n  margin-right: 1rem;\n  width: 2rem;\n  height: 2rem;\n  border: 2px solid var(--color-grey-5);\n  border-radius: 13%;\n\n\n`;\n\nexport const DefaultCheckbox = (props: Props) => (\n  <Box\n    position=\"relative\"\n    flexBasis=\"50%\"\n    marginBottom=\"1rem\">\n\n    <Label>\n      <Input type=\"checkbox\" />\n      <Span>\n        <CheckIcon \n          position=\"absolute\"  \n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\" \n          width=\"1.7rem\"\n          height=\"1.7rem\"\n          color=\"var(--color-white)\" />\n      </Span>\n      {props.label}\n      </Label>\n  </Box>\n)","import React, { Fragment, useState } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { Backdrop } from \"../Backdrop/Backdrop\";\nimport { DefaultCheckbox } from \"../UI/Checkbox/Checkbox\";\nimport { DefaultButton } from \"../UI/Button/Button\";\n\ninterface PersonalizeModalProps {\n  closeModalHandler: any;\n}\n\ninterface StyledComponentsProps {\n  fontSize?: string;\n  color?: string;\n}\n\nconst Heading = styled.h2`\n  font-size: var(--big-font-size);\n  font-weight: 500;\n`;\n\nconst Description = styled.p`\n  margin: 2.5rem 0;\n  font-size: ${(props: StyledComponentsProps) => props.fontSize || \"var(--medium-font-size)\"};\n  font-weight: 300;\n  color: ${(props: StyledComponentsProps) => props.color || \"var(--color-grey-2)\"};\n`;\n\nexport const PersonalizeModal = (props: PersonalizeModalProps) => {\n  const [platforms] = useState([\n    'PC (Microsoft Windows)',\n    'Xbox One',\n    'PlayStation 4',\n    'Nintendo Switch',\n    'Mac',\n    'Linux',\n    'iOS',\n    'Android',\n    'Nintendo 3DS',\n    'Playstation Vita',\n  ]);\n\n  return (\n    <Fragment>\n      <Backdrop clickHandler={props.closeModalHandler} />\n      <Flex\n        position=\"absolute\"\n        top=\"50vh\"\n        left=\"50vw\"\n        flexDirection=\"column\"\n        transform=\"translate(-50%, -50%)\"\n        minWidth=\"90rem\">\n        <Box>\n          <Heading>Personalize</Heading>\n          <CloseIcon \n            position=\"absolute\"\n            top=\"0\"\n            right=\"0\"\n            w=\"3.5rem\"\n            h=\"3.5rem\"\n            padding=\".5rem\"\n            cursor=\"pointer\"\n            borderRadius=\"50%\"             \n            _hover={{bg: \"var(--color-grey-3)\"}}\n            \n            onClick={props.closeModalHandler} />\n          <Description>Select what you want to see on your homepage</Description>\n        </Box>\n        <Box>\n          <Description\n            fontSize=\"var(--default-font-size)\"\n            color=\"var(color-grey-4)\">Platforms you own:</Description>\n          <Flex\n            flexWrap=\"wrap\">\n            {platforms.map(platform => (\n              <DefaultCheckbox label={platform} />\n            ))}            \n          </Flex>\n          <Flex marginTop=\"1rem\">\n          <DefaultButton\n              p=\"1.3rem 4rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-grey-2)\"\n              bg=\"var(--color-white)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-grey-6)\"}}\n              _active={{bg: \"var(--color-grey-6)\"}}\n              _hover={{bg: \"var(--color-grey-6)\"}}\n              clickHandler={props.closeModalHandler}>\n              Cancel\n            </DefaultButton>\n            <DefaultButton\n              p=\"1.3rem 4rem\"\n              marginLeft=\".5rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-white)\"\n              bg=\"var(--color-accent-2)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-accent-dark)\"}}\n              _active={{bg: \"var(--color-accent-dark)\"}}\n              _hover={{bg: \"var(--color-accent-dark)\",\n                       borderColor: \"var(--color-accent-dark)\"}}\n              clickHandler={props.closeModalHandler}>\n              Save\n            </DefaultButton>\n          </Flex>\n        </Box>\n      </Flex>\n    </Fragment>\n  );\n}","import React, { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\nimport { Button } from \"@chakra-ui/button\";\nimport Icon from \"@chakra-ui/icon\";\nimport { IoMdOptions } from 'react-icons/io';\nimport { PersonalizeModal } from \"../PersonalizeModal/PersonalizeModal\";\n\nconst MainHeading = styled.h1`\n  font-size: var(--big-font-size);\n`;\n\nconst HeadingSpan = styled.span`\n  font-style: italic;\n`;\n\nexport const WelcomeSection = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModalVisible = () => {\n    setShowModal((currentState) => !currentState);\n  }\n\n    return(\n      <Flex\n        justifyContent=\"space-between\"\n        padding=\"2rem 1.8rem\">\n        <MainHeading>\n          Welcome to the guiding star in <HeadingSpan>your </HeadingSpan>\n          world of gaming\n        </MainHeading>\n        <Button\n          rightIcon={<Icon as={IoMdOptions}\n                          color=\"var(--color-accent-dark)\" />}\n          padding=\"3rem 0\"\n          marginTop=\"-1.3rem\"\n          fontSize=\"var(--medium-font-size-2)\"\n          fontWeight=\"300\"\n          bg=\"var(--color-white)\"\n          color=\"var(--color-grey-2)\"\n          cursor=\"pointer\"\n          _focus={{boxShadow: \"none\"}}\n          _active={{bg: \"transparent\"}}\n          _hover={{bg: \"transparent\"}}\n          \n          onClick={() => toggleModalVisible()}>\n          Personalize\n        </Button>\n        {showModal && <PersonalizeModal \n                        closeModalHandler={toggleModalVisible} />}\n      </Flex>\n    );\n  }\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Box } from \"@chakra-ui/react\";\nimport { Header } from '../Header/Header';\nimport { WelcomeSection } from '../../components/WelcomeSection/WelcomeSection';\n\nconst LayoutBox = styled(Box)`\n  padding: 0 18rem;\n`;\n    \nexport const Layout = () => (\n  <Fragment>\n    <Header />\n    <LayoutBox>\n      <WelcomeSection />\n      \n    </LayoutBox>\n  </Fragment>\n)","import React, { Component, Fragment } from 'react';\nimport GlobalStyle from './components/styles/global';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Layout } from './containers/Layout/Layout';\n\nexport default class App extends Component {\n  state = {\n\n  }\n\n  componentDidMount() {\n    // fetch data from igdb api, save in state and pass state properties to Layout component........\n  }\n  \n  render() {\n\n    return (\n      <Fragment>\n        <ChakraProvider>\n          <GlobalStyle />\n          <Layout />\n        </ChakraProvider>\n      </Fragment>\n    );\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}