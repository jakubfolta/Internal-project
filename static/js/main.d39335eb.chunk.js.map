{"version":3,"sources":["network/lib/games.ts","shared/utility.ts","components/Backdrop/styles.ts","components/Backdrop/Backdrop.tsx","styles/global.ts","components/UI/Button/Button.tsx","components/Logo/styles.ts","components/Logo/Logo.tsx","components/Navigation/NavigationSubItem.tsx","components/Navigation/Navigation.tsx","components/Search/styles.ts","components/Search/Search.tsx","containers/Header/styles.ts","containers/Header/Header.tsx","containers/Layout/Layout.tsx","components/UI/Checkbox/styles.ts","components/UI/Checkbox/Checkbox.tsx","components/PersonalizeModal/styles.ts","components/PersonalizeModal/PersonalizeModal.tsx","components/Sections/WelcomeSection/styles.ts","components/Sections/WelcomeSection/WelcomeSection.tsx","components/PopularGame/styles.ts","components/PopularGame/PopularGame.tsx","components/Sections/PopularSection/styles.ts","components/Sections/PopularSection/PopularSection.tsx","components/MainPage/MainPage.tsx","App.tsx","index.tsx","network/apiClient.ts","store/IgdbContext.tsx"],"names":["fetchPopularGamesData","query","axiosClient","get","then","responseBody","fetchGameData","endpoint","fetchGameInfo","fetchGameScreenshots","fetchGameSeries","axios","all","setHalfYearPeriodTimeString","currentDate","Date","getFullYear","getMonth","slice","getDate","currentYear","currentMonth","currentDay","sixMonthsAgoDay","halfYearAgoDate","setDate","halfYearAgoMonth","halfYearAgoDay","getElapsedDaysSincePastDate","pastDate","isRounded","elapsedSeconds","Math","floor","getTime","elapsedMinutes","elapsedHours","elapsedDays","getRoundedDaysGone","daysGone","round","StyledBackdrop","styled","Box","props","isWhite","Backdrop","onClick","onClickBackdrop","theme","extendTheme","colors","white","GlobalStyle","createGlobalStyle","defaultFocusValue","boxShadow","defaultActiveValue","bg","defaultHoverValue","DefaultButton","alignSelf","p","marginLeft","height","cursor","borderRadius","border","color","fontSize","href","link","_focus","_active","_hover","as","kind","leftIcon","onClickButton","children","StyledLink","Link","Logo","to","NavigationSubItem","marginTop","items","map","item","icon","padding","name","hasDivider","Navigation","useState","Star","subItems","AtSign","navItems","isLazy","autoSelect","Button","rightIcon","ChevronDown","variant","textTransform","StyledInput","Input","attrs","type","placeholder","Search","maxW","bgColor","pointerEvents","boxSize","StyledHeader","header","StyledBox","Header","BsTwitch","Layout","Label","label","input","Span","span","Checkbox","position","flexBasis","marginBottom","Check","top","left","transform","width","Heading","h2","Description","PersonalizeModal","platforms","onCloseModal","flexDirection","minWidth","zIndex","Close","right","w","h","flexWrap","platform","borderColor","MainHeading","h1","HeadingSpan","WelcomeSection","isModalVisible","setIsModalVisible","toggleModalHandler","prevState","justifyContent","IoMdOptions","fontWeight","div","StyledSpan","GameTitle","h3","GameGenre","GameRating","PopularGame","fallbackSrc","fit","src","alt","title","genre","rating","id","styledIcon","css","StyledIconLeft","ChevronLeftIcon","StyledIconRight","ChevronRightIcon","PopularSection","shiftValue","setShiftValue","isSliderReady","setIsSliderReady","igdbContext","useContext","IgdbContext","fetchedGames","games","slideHandler","e","slidesContainer","document","getElementById","slideWidth","offsetWidth","length","slideDirection","currentTarget","getAttribute","translateValue","style","setTimeout","shiftData","ShiftData","container","translate","slide","direction","updatedGames","copiedGame","splice","setGames","updateSlides","transition","spacing","game","slug","background_image","genres","metacritic","MainPage","maxWidth","m","GamePageComponent","React","lazy","App","routes","fallback","path","exact","component","ReactDOM","render","StrictMode","response","data","setQuery","filter","create","baseURL","createContext","error","setError","IgdbContextProvider","setFetchedGames","isFetchingError","setIsFetchingError","halfYearTimePeriod","filterData","useEffect","shuffledGames","results","sort","a","b","random","lastGame","catch","errorMessage","contextValue","Provider","value"],"mappings":"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","file":"static/js/main.d39335eb.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {  axiosClient, responseBody } from \"../apiClient\";\n\nexport const fetchPopularGamesData = ((query: string) => {\n  return axiosClient.get(`/games${query}`).then(responseBody);\n});\n\nexport const fetchGameData = ((endpoint: string, query: string, ) => {\n  const fetchGameInfo = axiosClient.get(`/games/${endpoint}${query}`).then(responseBody);\n  const fetchGameScreenshots = axiosClient.get(`/games/${endpoint}/screenshots${query}`).then(responseBody);\n  const fetchGameSeries = axiosClient.get(`/games/${endpoint}/game-series${query}`).then(responseBody);\n\n  return axios.all([fetchGameInfo, fetchGameScreenshots, fetchGameSeries])\n});","export const setHalfYearPeriodTimeString = () => {\n  const currentDate = new Date();\n\n  const [currentYear, currentMonth, currentDay] = [\n    currentDate.getFullYear(),\n    (`0${currentDate.getMonth() + 1}`).slice(-2),\n    (`0${currentDate.getDate()}`).slice(-2)\n  ];\n  \n  const sixMonthsAgoDay = currentDate.getDate() - 180;\n  const halfYearAgoDate = new Date(currentDate.setDate(sixMonthsAgoDay));\n  \n  const [halfYearAgoYear, halfYearAgoMonth, halfYearAgoDay] = [\n    halfYearAgoDate.getFullYear(),\n    (`0${halfYearAgoDate.getMonth() + 1}`).slice(-2),\n    (`0${halfYearAgoDate.getDate()}`).slice(-2)\n  ];\n\n  const halfYearTimePeriod = `${halfYearAgoYear}-${halfYearAgoMonth}-${halfYearAgoDay},${currentYear}-${currentMonth}-${currentDay}`;\n\n  return halfYearTimePeriod;\n}\n\nexport const getElapsedDaysSincePastDate = (pastDate: string, isRounded?: boolean) => {\n  const elapsedSeconds = Math.floor((new Date().getTime() - new Date(pastDate).getTime()) / 1000);\n  const elapsedMinutes = Math.floor(elapsedSeconds / 60);\n  const elapsedHours = Math.floor(elapsedMinutes / 60);\n  const elapsedDays = Math.floor(elapsedHours / 24);\n\n  return isRounded ? getRoundedDaysGone(elapsedDays) : elapsedDays;\n}\n\nconst getRoundedDaysGone = (daysGone: number) => {\n  if (daysGone < 30) return `${daysGone} ${daysGone === 1 ? 'day' : 'days'} ago`;\n  if (Math.round(daysGone / 30) === 1) return 'a month ago'; \n  return `${Math.round(daysGone / 30)} months ago`;\n} ","import { Box } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\n\nexport const StyledBackdrop = styled(Box)<{isWhite: boolean}>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  background-color: ${props => props.isWhite ? \"var(--color-white)}\" : \"var(--color-black)\"};\n  opacity: ${props => !props.isWhite && 0};\n  animation: ${props => !props.isWhite && \"appear .5s ease\"};\n  animation-fill-mode: forwards;\n  z-index: 20;\n`;","import React from \"react\";\nimport { Props } from \"./interfaces\";\nimport { StyledBackdrop } from \"./styles\";\n\nexport const Backdrop: React.FC<Props> = props => (\n  <StyledBackdrop\n    isWhite={props.isWhite}\n    onClick={props.onClickBackdrop} />\n) ","import { extendTheme } from '@chakra-ui/react';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const theme = extendTheme({\n  colors: { white: \"var(--color-background)\" }\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    padding: 0;\n    margin: 0;\n    box-sizing: inherit;\n  }\n\n  html { font-size: 62.5%; } // 1rem = 10px \n  body { box-sizing: border-box; }\n  \n  :root {\n    // Measures\n    --default-slides-amount: 4;\n    --default-slides-spacing: .5rem;\n    --default-width: 1152px;\n    --main-page-padding: 1rem;\n    \n    --slide-width: calc(\n      (var(--default-width) - var(--main-page-padding) * 2) \n      / var(--default-slides-amount) - var(--default-slides-spacing) * 2\n    );\n    // Colors\n    --color-primary: #323A45;\n    --color-background: #FAFAFA;\n    --color-white: #FFFFFF;\n    --color-white-2: #ECF0F1;\n    --color-black: #444;\n    --color-black-2: #555;\n    --color-grey: hsl(0, 0%, 90%);\n    --color-grey-2: #858585;\n    --color-grey-3: #ECECEC;\n    --color-grey-4: #34373b;\n    --color-grey-5: #BDC3C7;\n    --color-grey-6: #e6e6e6;\n    --color-grey-7: #bfbfbf;\n    --color-edit-bg: #f7f8fa;\n    --color-edit: #4E4E4E;\n    --color-accent: #9047FF;\n    --color-accent-2: #9147ff;\n    --color-accent-3: #f1c40f;\n    --color-accent-dark: #7214FF;\n    // Fonts\n    --xsmall-font-size: 1.2rem;\n    --small-font-size: 1.4rem;\n    --default-font-size: 1.6rem;\n    --medium-font-size: 1.8rem;\n    --medium-font-size-2: 2rem;\n    --big-font-size: 2.4rem;\n    --xl-font-size: 2.8rem;\n    --game-heading-size: 6rem;\n    // Animations\n    @keyframes appear { to { opacity: .5; } }\n  }\n`;\n\nexport default GlobalStyle;\n","import { Button } from \"@chakra-ui/button\";\nimport { Props } from \"./interfaces\";\n\nconst defaultFocusValue = {boxShadow: \"none\"};\nconst defaultActiveValue = {bg: \"var(--color-accent-dark)\"};\nconst defaultHoverValue = {bg: \"var(--color-accent-dark)\"};\n\nexport const DefaultButton: React.FC<Props> = props => (\n  <Button\n    alignSelf=\"stretch\"\n    p={props.p || \"auto\"}\n    marginLeft={props.marginLeft || \"auto\"}\n    height=\"auto\"\n    cursor=\"pointer\"\n    borderRadius={props.borderRadius || \"0\"}\n    bg={props.bg || \"var(--color-accent)\"}\n    border={props.border || \"none\"}\n    color={props.color || \"var(--color-white)\"}\n    fontSize={props.fontSize || \"var(--xsmall-font-size)\"}\n    href={props.link}\n    _focus={props._focus || defaultFocusValue}\n    _active={props._active || defaultActiveValue}\n    _hover={props._hover || defaultHoverValue}\n\n    as={props.kind}\n    leftIcon={props.leftIcon}\n    onClick={props.onClickButton}>\n    {props.children}\n  </Button>\n)","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 1rem 2rem;\n  color: var(--color-white);\n  font-size: 2rem;\n`;","import { Box } from '@chakra-ui/react';\nimport { StyledLink } from './styles';\n\nexport const Logo: React.FC = () => (\n    <Box >\n      <StyledLink to=\"/\">Logo</StyledLink>\n    </Box>\n)\n","import { Fragment } from \"react\";\nimport { MenuList, MenuItem, MenuDivider } from \"@chakra-ui/menu\";\nimport { Props } from \"./interfaces\";\n\nexport const NavigationSubItem: React.FC<Props> = props => (\n  <MenuList\n    bg=\"var(--color-accent)\"\n    color=\"var(--color-white)\"\n    fontSize=\"var(--default-font-size)\"\n    marginTop=\"-0.8rem\"\n    border=\"none\"\n    borderRadius=\"0\">\n    {\n      props.items.map(item => (\n        <Fragment key={item.name}>\n          <MenuItem \n          icon={item.icon}\n          _focus={{bg: \"var(--color-accent-dark)\"}}\n          padding=\"1rem 2rem\">\n          {item.name}</MenuItem>\n          {item.hasDivider && <MenuDivider />}\n        </Fragment>\n      ))\n    }\n  </MenuList>\n)","import { Fragment, useState } from 'react';\nimport { Menu, MenuButton } from '@chakra-ui/menu';\nimport { AtSignIcon, StarIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport { Button } from '@chakra-ui/button';\nimport { NavigationSubItem } from './NavigationSubItem';\n\nexport const Navigation: React.FC = () => {\n  const [navigationItems] = useState([\n      {\n        name: \"Games\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Discover\", icon: <AtSignIcon /> },\n          { name: \"Reviews\", icon: <AtSignIcon /> },\n          { name: \"Advanced Search\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Coming Soon\", icon: <AtSignIcon /> },\n          { name: \"Recently Released\", icon: <AtSignIcon /> },\n          { name: \"Top 100\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Add Game\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Database\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Games\", icon: <AtSignIcon /> },\n          { name: \"Platforms\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Developer API\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Community\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Karma Hunters\", icon: <AtSignIcon /> },\n          { name: \"Discord\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Help\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"About IGDB\", icon: <AtSignIcon /> },\n          { name: \"Contributions\", icon: <AtSignIcon /> },\n          { name: \"UserVoice\", icon: <AtSignIcon /> },\n          { name: \"Contact\", icon: <AtSignIcon /> }\n        ]\n      }\n    ]);\n\n  const navItems = navigationItems.map( item => \n    <Fragment key={item.name}>\n      <Menu isLazy autoSelect={false}>\n        <MenuButton\n            as={Button}\n            leftIcon={item.icon}\n            rightIcon={<ChevronDownIcon />}\n            variant=\"flushed\"\n            alignSelf=\"stretch\"\n            height=\"auto\"\n            color=\"var(--color-white)\"\n            fontSize=\"var(--xsmall-font-size)\"\n            textTransform=\"uppercase\"\n            borderRadius=\"0\"\n            p=\"0 1.5rem\"\n            _focus={{boxShadow: \"none\"}}\n            _active={{\n              color: \"var(--color-white)\",\n              bg: \"var(--color-accent)\",\n              boxShadow: \"none\"}}\n            _hover={{color: \"#7214FF\"}}>\n            {item.name}\n        </MenuButton>\n        <NavigationSubItem items={item.subItems} />\n      </Menu>\n    </Fragment>\n  )\n\n  return (\n    <Fragment>\n      {navItems}\n    </Fragment>\n  );\n}","import { Input } from '@chakra-ui/input';\nimport styled from 'styled-components';\n\nexport const StyledInput = styled(Input).attrs({\n  type: \"text\",\n  placeholder: \"Search\"\n})`\n  && {\n    font-size: var(--medium-font-size);\n    padding: 1.5rem;\n  \n    &:focus {\n      border-color: transparent;\n      box-shadow: none;\n      background-color: var(--color-white);\n    }\n  }\n`;","import { InputGroup, InputRightAddon } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport { StyledInput } from './styles';\n\nexport const Search: React.FC = () => (\n  <InputGroup maxW=\"28rem\">\n    <StyledInput bgColor=\"var(--color-grey)\" />\n    <InputRightAddon\n      pointerEvents=\"none\"\n      p=\"1.5rem\" \n      children={<SearchIcon boxSize=\"1.5rem\"/>} />\n  </InputGroup>\n)","import { Box } from '@chakra-ui/layout';\nimport styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  background-color: var(--color-primary);\n`;\n\nexport const StyledBox = styled(Box)`\n  width: var(--default-width);\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  margin: auto;\n`;\n","import { DefaultButton } from '../../components/UI/Button/Button';\nimport { Icon } from '@chakra-ui/icon';\nimport { BsTwitch } from 'react-icons/bs';\nimport { Logo } from '../../components/Logo/Logo';\nimport { Navigation } from '../../components/Navigation/Navigation';\nimport { Search } from '../../components/Search/Search';\nimport { StyledBox, StyledHeader } from './styles';\n\nexport const Header: React.FC = () => (\n    <StyledHeader>\n      <StyledBox>\n        <Logo />\n        <Search />\n        <Navigation />\n        <DefaultButton\n          kind=\"a\"\n          leftIcon={<Icon as={BsTwitch} />}\n          link=\"https://www.igdb.com/oauth/twitch\">\n          LOGIN WITH TWITCH</DefaultButton>\n      </StyledBox>\n    </StyledHeader>\n)","import { Fragment } from 'react';\nimport { Header } from '../Header/Header';\n    \nexport const Layout: React.FC = props => (\n  <Fragment>\n    <Header />\n    {props.children}\n  </Fragment>\n)","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  color: var(--color-black);\n  font-size: var(--small-font-size);\n  font-weight: 700;\n\n  &:hover > span { background-color: var(--color-grey-5); }\n`;\n\nexport const Input = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n\n  &:checked + span {\n    background-color: var(--color-accent-2);\n    border-color: var(--color-accent-2);\n  }\n`;\n\nexport const Span = styled.span`\n  position: relative;\n  margin-right: 1rem;\n  width: 2rem;\n  height: 2rem;\n  border: 2px solid var(--color-grey-5);\n  border-radius: 13%;\n`;","import { Box } from \"@chakra-ui/react\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport { Label, Input, Span } from \"./styles\";\n\nexport const Checkbox: React.FC<{label: string}> = props => (\n  <Box\n    position=\"relative\"\n    flexBasis=\"50%\"\n    marginBottom=\"1rem\">\n    <Label>\n      <Input />\n      <Span>\n        <CheckIcon \n          position=\"absolute\"  \n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\" \n          width=\"1.7rem\"\n          height=\"1.7rem\"\n          color=\"var(--color-white)\" />\n      </Span>\n      {props.label}\n      </Label>\n  </Box>\n)","import styled from \"styled-components\";\nimport { StyledComponentsProps } from \"./interfaces\";\n\nexport const Heading = styled.h2`\n  font-size: var(--big-font-size);\n  font-weight: 500;\n`;\n\nexport const Description = styled.p`\n  margin: 2.5rem 0;\n  font-size: ${(props: StyledComponentsProps) => props.fontSize || \"var(--medium-font-size)\"};\n  font-weight: 300;\n  color: ${(props: StyledComponentsProps) => props.color || \"var(--color-grey-2)\"};\n`;","import { Fragment, useState } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/layout\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { Backdrop } from \"../Backdrop/Backdrop\";\nimport { Checkbox } from \"../UI/Checkbox/Checkbox\";\nimport { DefaultButton } from \"../UI/Button/Button\";\nimport { Description, Heading } from \"./styles\";\n\nexport const PersonalizeModal: React.FC<{onCloseModal: () => void}> = props => {\n  const [platforms] = useState([\n    'PC (Microsoft Windows)',\n    'Xbox One',\n    'PlayStation 4',\n    'Nintendo Switch',\n    'Mac',\n    'Linux',\n    'iOS',\n    'Android',\n    'Nintendo 3DS',\n    'Playstation Vita'\n  ]);\n\n  return (\n    <Fragment>\n      <Backdrop isWhite onClickBackdrop={props.onCloseModal} />\n      <Flex\n        position=\"absolute\"\n        top=\"50vh\"\n        left=\"50vw\"\n        flexDirection=\"column\"\n        transform=\"translate(-50%, -50%)\"\n        minWidth=\"90rem\"\n        zIndex=\"20\">\n        <Box>\n          <Heading>Personalize</Heading>\n          <CloseIcon \n            position=\"absolute\"\n            top=\"0\"\n            right=\"0\"\n            w=\"3.5rem\"\n            h=\"3.5rem\"\n            padding=\".5rem\"\n            cursor=\"pointer\"\n            borderRadius=\"50%\"             \n            _hover={{bg: \"var(--color-grey-3)\"}}\n            \n            onClick={props.onCloseModal} />\n          <Description>Select what you want to see on your homepage</Description>\n        </Box>\n        <Box>\n          <Description\n            fontSize=\"var(--default-font-size)\"\n            color=\"var(color-grey-4)\">Platforms you own:</Description>\n          <Flex\n            flexWrap=\"wrap\">\n            {platforms.map(platform => (\n              <Checkbox key={platform} label={platform} />\n            ))}            \n          </Flex>\n          <Flex marginTop=\"1rem\">\n          <DefaultButton\n              p=\"1.3rem 4rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-grey-2)\"\n              bg=\"var(--color-white)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-grey-6)\"}}\n              _active={{bg: \"var(--color-grey-6)\"}}\n              _hover={{bg: \"var(--color-grey-6)\"}}\n              onClickButton={props.onCloseModal}>\n              Cancel\n            </DefaultButton>\n            <DefaultButton\n              p=\"1.3rem 4rem\"\n              marginLeft=\".5rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-white)\"\n              bg=\"var(--color-accent-2)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-accent-dark)\"}}\n              _active={{bg: \"var(--color-accent-dark)\"}}\n              _hover={{bg: \"var(--color-accent-dark)\",\n                       borderColor: \"var(--color-accent-dark)\"}}\n              onClickButton={props.onCloseModal}>\n              Save\n            </DefaultButton>\n          </Flex>\n        </Box>\n      </Flex>\n    </Fragment>\n  );\n}","import styled from \"styled-components\";\n\nexport const MainHeading = styled.h1`\n  font-size: var(--big-font-size);\n`;\n\nexport const HeadingSpan = styled.span`\n  font-style: italic;\n`;","import { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport Icon from \"@chakra-ui/icon\";\nimport { IoMdOptions } from 'react-icons/io';\nimport { PersonalizeModal } from \"../../PersonalizeModal/PersonalizeModal\";\nimport { HeadingSpan, MainHeading } from \"./styles\";\n\nexport const WelcomeSection: React.FC = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const toggleModalHandler = () => setIsModalVisible(prevState => !prevState);\n\n  return (\n    <Flex\n      justifyContent=\"space-between\"\n      padding=\"2rem 0\">\n      <MainHeading>\n        Welcome to the guiding star in <HeadingSpan>your </HeadingSpan>\n        world of gaming\n      </MainHeading>\n      <Button\n        rightIcon={<Icon as={IoMdOptions}\n        color=\"var(--color-accent-dark)\" />}\n        padding=\"3rem 0\"\n        marginTop=\"-1.3rem\"\n        fontSize=\"var(--medium-font-size-2)\"\n        fontWeight=\"300\"\n        bg=\"var(--color-background)\"\n        color=\"var(--color-grey-2)\"\n        cursor=\"pointer\"\n        _focus={{boxShadow: \"none\"}}\n        _active={{bg: \"transparent\"}}\n        _hover={{bg: \"transparent\"}}\n        \n        onClick={toggleModalHandler}>\n        Personalize\n      </Button>\n      {isModalVisible && <PersonalizeModal \n                            onCloseModal={toggleModalHandler} />}\n    </Flex>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  flex: 1 0 var(--slide-width);\n\n  && { margin: 0 var(--default-slides-spacing); }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, rgba(145,71,255,0.9), rgba(43,187,228,0.9));\n  }\n  \n  &:hover::after,\n  &:hover span { display: block; }\n  `;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  top: 15%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: none;\n  color: var(--color-white);\n  font-size: var(--xl-font-size);\n  z-index: 1;\n  `;\n  \n  export const GameTitle = styled.h3`\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: var(--small-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n    margin-bottom: 2px;\n  `;\n  \n  export const GameGenre = styled.span`\n    font-size: var(--xsmall-font-size);\n    color: var(--color-grey-7);\n  `;\n  \n  export const GameRating = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    font-size: var(--default-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n  `;\n","import { Image } from \"@chakra-ui/image\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Props } from \"./interfaces\";\nimport { GameGenre, GameRating, GameTitle, StyledBox, StyledLink, StyledSpan } from \"./styles\";\n\nexport const PopularGame: React.FC<Props> = props => (\n  <StyledLink to={props.link}>\n    <StyledBox>\n      <StyledSpan>Read<br/>More</StyledSpan>\n      <Image\n        fallbackSrc=\"https://via.placeholder.com/200\"\n        height=\"15rem\"\n        width=\"100%\"\n        fit=\"cover\"\n        src={props.src}\n        alt={props.alt} />\n\n      <Box\n        position=\"relative\"\n        width=\"var(--slide-width)\"\n        bg=\"var(--color-white)\"\n        p=\"1rem\"\n        border=\"1px solid var(--color-grey-3)\"\n        zIndex=\"10\">\n        <GameTitle>{props.title}</GameTitle>\n        <GameGenre>{props.genre}</GameGenre>\n        <GameRating>{props.rating || 0}%</GameRating>\n      </Box>\n    </StyledBox>\n  </StyledLink>\n)\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport styled, { css } from \"styled-components\";\n\nexport const Heading = styled.h2`\n  position: relative;\n  font-size: var(--default-font-size);\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin: 2rem 0;\n  text-transform: uppercase;\n  z-index: -10;\n\n  :before {\n    position: absolute;\n    bottom: -1rem;\n    left: 0;\n    content: '';\n    width: 5rem;\n    height: 2px;\n    background-color: var(--color-accent-3);\n  }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n  display: flex;\n  overflow: hidden;\n`;\n\nexport const StyledSpan = styled.span<{id: string}>`\n  position: absolute;\n  top: 0;\n  left: ${props => props.id === 'left' && \"var(--default-slides-spacing)\"};\n  right: ${props => props.id === 'right' && \"var(--default-slides-spacing)\"};\n  height: 100%;\n  cursor: pointer;\n  z-index: 11;\n\n  &:hover svg {\n    background-color: var(--color-white);\n    color: var(--color-black);\n  }\n`;\n\nconst styledIcon = css`\n  && { color: white; }\n    \n    position: relative;\n    top: 25%;\n    background-color: rgba(0, 0, 0, 0.6);\n    font-size: 4rem;\n`;\n\nexport const StyledIconLeft = styled(ChevronLeftIcon)`\n  ${styledIcon}\n`;\n\nexport const StyledIconRight = styled(ChevronRightIcon)`\n  ${styledIcon}\n`;","import { Box, HStack } from \"@chakra-ui/layout\";\nimport { useContext, useState } from \"react\";\nimport { IgdbContext } from \"../../../store/IgdbContext\";\nimport { PopularGame } from \"../../PopularGame/PopularGame\";\nimport { ShiftData } from \"./interfaces\";\nimport { Heading, StyledBox, StyledIconLeft, StyledIconRight, StyledSpan } from \"./styles\";\n\nexport const PopularSection: React.FC = () => {\n  const [shiftValue, setShiftValue] = useState(0);\n  const [isSliderReady, setIsSliderReady] = useState(true);\n\n  const igdbContext = useContext(IgdbContext);\n  const fetchedGames = [...igdbContext.games];\n\n  const shiftSlidesContainer = (shiftData: ShiftData) => shiftData.container.style.left=`${shiftData.translate * -1 - shiftData.slide}px`;\n\n  const updateSlides = (direction: string) => {\n    let updatedGames: {}[] = [];\n    const copiedGame = direction === 'left'\n      ? fetchedGames.splice(-1, 1)\n      : fetchedGames.splice(0, 1);\n\n    updatedGames = direction === 'left'\n      ? [...copiedGame, ...fetchedGames]\n      : [...fetchedGames, ...copiedGame]\n      \n      igdbContext.setGames(updatedGames);\n    }\n    \n  const slideHandler = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    if (!isSliderReady) return;\n    setIsSliderReady(false);\n    \n    const slidesContainer = document.getElementById('slides_container')!;\n    const slideWidth = slidesContainer?.offsetWidth / fetchedGames.length;\n    const slideDirection= e.currentTarget.getAttribute('id')!\n    \n    const translateValue = slideDirection === 'left'\n    ? shiftValue + slideWidth\n    : shiftValue - slideWidth;\n    \n    slidesContainer.style.transform=`translateX(${translateValue}px)`;\n    setShiftValue(translateValue);\n    \n    setTimeout(() => {\n      const ShiftData = {\n        container: slidesContainer,\n        translate: translateValue,\n        slide: slideWidth\n      }\n      \n      updateSlides(slideDirection);\n      shiftSlidesContainer(ShiftData);\n      setIsSliderReady(true);\n    }, 500)\n  }\n\n  return (\n    <Box>\n      <Heading>Popular games right now</Heading>\n      <StyledBox>\n        \n        <StyledSpan id=\"left\" onClick={(e) => slideHandler(e)}>\n          <StyledIconLeft />\n        </StyledSpan>\n        <StyledSpan id=\"right\" onClick={(e) => slideHandler(e)}>\n          <StyledIconRight />\n        </StyledSpan>\n        <HStack\n            left=\"calc(var(--slide-width) * -1 - var(--default-slides-spacing) * 2)\"\n            id=\"slides_container\"\n            position=\"relative\"\n            transition=\"transform .5s ease\"\n            direction=\"row\"\n            spacing=\"0\">\n            {igdbContext.games.map(game => (\n              <PopularGame\n                key={game.id}\n                link={`games/${game.slug}`}\n                src={game.background_image}\n                alt={game.name}\n                title={game.name}\n                genre={game.genres[0].name}\n                rating={game.metacritic} />\n            ))}\n          </HStack>\n      </StyledBox>\n    </Box>\n  );\n}","import { Box } from \"@chakra-ui/react\";\nimport { WelcomeSection } from '../../components/Sections/WelcomeSection/WelcomeSection';\nimport { PopularSection } from '../../components/Sections/PopularSection/PopularSection';\n\nexport const MainPage: React.FC = () => (\n  <Box \n    w=\"var(--default-width)\"\n    maxWidth=\"100%\"\n    m=\"auto\"\n    p=\"0 var(--main-page-padding)\">\n    <WelcomeSection />\n    <PopularSection />\n\n  </Box>\n)","import React, { Fragment, Suspense } from 'react';\nimport GlobalStyle, { theme } from './styles/global';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Layout } from './containers/Layout/Layout';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { MainPage } from './components/MainPage/MainPage';\n\nconst GamePageComponent = React.lazy(() => import('./components/GamePage/GamePage') );\n// const PublisherPageComponent = React.lazy(() => import('./components/PublisherPage/PublisherPage') );\n\nexport const App: React.FC = () => {\n  const routes =\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route path=\"/discovery\" exact component={MainPage} />\n        <Route path=\"/games/:game\" exact component={GamePageComponent} />\n        {/* <Route path=\"/companies/:publisher\" exact component={PublisherPageComponent} /> */}\n        <Redirect to=\"/discovery\" />\n      </Switch>\n    </Suspense>\n  \n  return (\n    <Fragment>\n      <ChakraProvider theme={theme}>\n        <GlobalStyle />\n        <Layout>\n          {routes}\n        </Layout>\n      </ChakraProvider>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { IgdbContextProvider } from './store/IgdbContext';\n\nReactDOM.render(\n  <IgdbContextProvider>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </IgdbContextProvider>,\n  document.getElementById('root')\n);\n\n","import axios, { AxiosResponse } from \"axios\";\n\nconst apiKey = '6cb0dad0b2204442bfdfda2715ca7de1';\n\nexport const responseBody = (response: AxiosResponse) => response.data;\n\nexport const setQuery = (filter?: string) => {\n  const query = `?key=${apiKey}${filter ?? '' }`;\n  \n  return query;\n} \n\nexport const axiosClient = axios.create({\n  baseURL: 'https://api.rawg.io/api'\n});","import React, { useEffect, useState } from \"react\";\nimport { setQuery } from \"../network/apiClient\";\nimport { fetchPopularGamesData } from \"../network/lib/games\";\nimport { setHalfYearPeriodTimeString } from \"../shared/utility\";\nimport { Context } from \"./interfaces\";\n\nexport const IgdbContext = React.createContext<Context>({\n  games: [],\n  error: false,\n  setGames: () => {},\n  setError: () => {}\n});\n\nexport const IgdbContextProvider: React.FC = props => {\n  const [fetchedGames, setFetchedGames] = useState<any[]>([]);\n  const [isFetchingError, setIsFetchingError] = useState<boolean | string>(false);\n\n  const halfYearTimePeriod: string = setHalfYearPeriodTimeString();\n  const gamesAmountToFetch = 10;\n  const filterData = `&dates=${halfYearTimePeriod}&page_size=${gamesAmountToFetch}`;\n  const query: string = setQuery(filterData);\n  \n  useEffect(() => {\n    fetchPopularGamesData(query)\n    .then(response => {\n      const lastSixMonthsPopularGames = response.results;\n      const shuffledGames = lastSixMonthsPopularGames.sort((a: {}, b: {}) => .5 - Math.random());\n      const lastGame = shuffledGames.splice(-1, 1);\n      const updatedGames = [...lastGame, ...shuffledGames];\n\n      // console.log(lastSixMonthsPopularGames);\n      \n      setFetchedGames(updatedGames);\n    })\n    \n    .catch(error => {\n      const errorMessage: string = error.response.data.error;\n      \n      setIsFetchingError(errorMessage);\n    })\n  }, []);\n \n  const contextValue: Context = {\n    games: fetchedGames, \n    error: isFetchingError,\n    setGames: setFetchedGames,\n    setError: setIsFetchingError\n  };\n  \n  return <IgdbContext.Provider value={contextValue}>\n          {props.children}\n         </IgdbContext.Provider>;\n}"],"sourceRoot":""}