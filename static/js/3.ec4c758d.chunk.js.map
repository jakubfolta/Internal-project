{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/GamePage/GamePage.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","GamePage","useState","game","setGame","igdbContext","useContext","IgdbContext","gameSlug","useParams","query","setQuery","useEffect","fetchGameData","then","axios","spread","responses","randomScreenshot","Math","floor","random","results","gameData","random_screenshot","screenshots","series","console","log","catch","error","errorMessage","data","setError","alt","name","src","image","title","release","released","publisher","publishers","publisherSlug","slug","background_image"],"mappings":"0HAEA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,OAAAC,EAAA,GAAeP,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOkB,0BAChBlB,OAAOmB,iBAAiBT,EAAQV,OAAOkB,0BAA0BJ,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOiB,eAAeP,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,E,4FCsBMU,UA7CY,WACzB,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAcC,qBAAWC,KAEzBC,EADyBC,cACPN,KAClBO,EAAgBC,cAuBtB,OArBAC,qBAAU,WACRC,YAAcL,EAAUE,GACvBI,KAAKC,IAAMC,QAAO,WAAmB,IAAD,uBAAdC,EAAc,yBAAdA,EAAc,gBACnC,IAAMC,EAAmBC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAU,GAAGK,QAAQ5B,QACnE6B,EAAQ,OACTN,EAAU,IADD,IAEZO,kBAAmBN,EACnBO,YAAaR,EAAU,GAAGK,QAC1BI,OAAQT,EAAU,GAAGK,UAGvBK,QAAQC,IAAIL,GACZnB,EAAQmB,OAETM,OAAM,SAAAC,GACL,IAAMC,EAAuBD,EAAMb,UAAUe,KAAKF,MAElDzB,EAAY4B,SAASF,QAEtB,IAGD,eAAC,IAAD,WACE,cAAC,IAAD,CACEG,IAAG,OAAE/B,QAAF,IAAEA,OAAF,EAAEA,EAAMgC,KACXC,IAAG,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAMsB,YAAYtB,EAAKqB,mBAAmBa,MAC/CC,MAAK,OAAEnC,QAAF,IAAEA,OAAF,EAAEA,EAAMgC,KACbI,QAAO,OAAEpC,QAAF,IAAEA,OAAF,EAAEA,EAAMqC,SACfC,UAAS,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAMuC,WAAW,GAAGP,KAC/BQ,cAAa,OAAExC,QAAF,IAAEA,OAAF,EAAEA,EAAMuC,WAAW,GAAGE,OACrC,cAAC,IAAD,CACER,IAAG,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAM0C","file":"static/js/3.ec4c758d.chunk.js","sourcesContent":["import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import axios from \"axios\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router\";\nimport { setQuery } from \"../../network/apiClient\";\nimport { fetchGameData } from \"../../network/lib/games\";\nimport { IgdbContext } from \"../../store/IgdbContext\";\nimport { Details, Hero } from \"../\";\nimport { Game } from \"./interfaces\";\n\nconst GamePage: React.FC = () => {\n  const [game, setGame] = useState<Game>();\n\n  const igdbContext = useContext(IgdbContext);\n  const search: {game: string} = useParams();\n  const gameSlug = search.game;\n  const query: string = setQuery();\n  \n  useEffect(() => {\n    fetchGameData(gameSlug, query)\n    .then(axios.spread((...responses) => {\n      const randomScreenshot = Math.floor(Math.random() * responses[1].results.length);\n      const gameData = {\n        ...responses[0],\n        random_screenshot: randomScreenshot,\n        screenshots: responses[1].results,\n        series: responses[2].results\n      };\n      \n      console.log(gameData);\n      setGame(gameData);\n    }))\n    .catch(error => {\n      const errorMessage: string = error.responses.data.error;\n\n      igdbContext.setError(errorMessage);\n    })\n  }, []);\n\n  return (\n    <Box>\n      <Hero \n        alt={game?.name as string}\n        src={game?.screenshots[game.random_screenshot].image as string} \n        title={game?.name as string}\n        release={game?.released as string}\n        publisher={game?.publishers[0].name as string}\n        publisherSlug={game?.publishers[0].slug as string} />\n      <Details \n        src={game?.background_image as string}  />\n\n    </Box>\n  );\n}\n\nexport default GamePage;"],"sourceRoot":""}