{"version":3,"sources":["network/lib/games.ts","styles/global.ts","App.tsx","index.tsx","network/apiClient.ts","store/IgdbContext.tsx","shared/utility.ts","components/Backdrop/styles.ts","components/Backdrop/Backdrop.tsx","components/GamePage/Details/styles.ts","components/GamePage/Details/Details.tsx","components/GamePage/Details/About/styles.ts","components/GamePage/Details/About/About.tsx","components/GamePage/Hero/styles.ts","components/GamePage/Hero/Hero.tsx","components/GamePage/TwitchModal/styles.ts","components/GamePage/TwitchModal/TwitchModal.tsx","components/Logo/styles.ts","components/Logo/Logo.tsx","components/MainPage/MainPage.tsx","components/Navigation/NavigationSubItem.tsx","components/Navigation/Navigation.tsx","components/PersonalizeModal/styles.ts","components/PersonalizeModal/PersonalizeModal.tsx","components/PopularGame/styles.ts","components/PopularGame/PopularGame.tsx","components/Search/styles.ts","components/Search/Search.tsx","components/Sections/PopularSection/styles.ts","components/Sections/PopularSection/PopularSection.tsx","components/Sections/WelcomeSection/styles.ts","components/Sections/WelcomeSection/WelcomeSection.tsx","components/UI/Checkbox/styles.ts","components/UI/Checkbox/Checkbox.tsx","components/UI/DefaultButton/DefaultButton.tsx","containers/Header/styles.ts","containers/Header/Header.tsx","containers/Layout/Layout.tsx"],"names":["fetchPopularGamesData","query","axiosClient","get","then","responseBody","fetchGameData","endpoint","fetchGameInfo","fetchGameScreenshots","fetchGameSeries","axios","all","theme","extendTheme","colors","white","GlobalStyle","createGlobalStyle","GamePageComponent","React","lazy","App","routes","fallback","path","exact","component","MainPage","to","ReactDOM","render","IgdbContext","StrictMode","document","getElementById","response","data","setQuery","filter","create","baseURL","createContext","games","error","setGames","setError","IgdbContextProvider","props","useState","fetchedGames","setFetchedGames","isFetchingError","setIsFetchingError","halfYearTimePeriod","setHalfYearPeriodTimeString","filterData","useEffect","shuffledGames","results","sort","a","b","Math","random","lastGame","splice","updatedGames","catch","errorMessage","contextValue","Provider","value","children","currentDate","Date","getFullYear","getMonth","slice","getDate","currentYear","currentMonth","currentDay","sixMonthsAgoDay","halfYearAgoDate","setDate","halfYearAgoMonth","halfYearAgoDay","getElapsedDaysSincePastDate","pastDate","isRounded","elapsedSeconds","floor","getTime","elapsedMinutes","elapsedHours","elapsedDays","getRoundedDaysGone","daysGone","round","StyledBackdrop","styled","Box","iswhite","animationTiming","enter","exit","Backdrop","CSSTransition","mountOnEnter","unmountOnExit","in","isVisible","timeout","classNames","exitActive","onClick","onClickBackdrop","StyledFollowButton","button","StyledMenuButton","active","StyledMenuUnderline","span","position","Details","isReadMoreClicked","setIsReadMoreClicked","name","status","id","menu","setMenu","readMoreClickHandler","buttons","map","e","currentTarget","getAttribute","menuCopy","item","onSwitchActiveButtonHandler","display","w","m","top","marginRight","h","fit","src","flex","bg","spacing","variant","details","trimmedDescription","description","substr","nameSlug","genres","genreSlug","platforms","versions","readMore","onReadMoreClick","website","reddit","StyledParagraph","p","StyledSpan","StyledLink","Link","StyledReadMore","StyledIconLinkContainer","StyledIconLink","StyledIconSpan","StyledIcon","Icon","About","genre","index","array","length","platform","slug","href","as","BiLinkExternal","FaRedditAlien","StyledHero","StyledGameInfo","StyledHeading","h2","StyledEdit","StyledReleasedDate","StyledPublisher","Hero","memo","isModalVisible","setIsModalVisible","releaseDate","release","day","month","toLocaleString","year","transformedDate","toggleModalHandler","preventDefault","prevState","backdrop","twitchModal","onCloseModal","height","width","transform","alt","title","publisherSlug","publisher","StyledTwitchBox","StyledCloseButton","StyledTwitchButton","Button","TwitchModal","enterActive","enterDone","justify","align","Close","leftIcon","Logo","maxWidth","NavigationSubItem","color","fontSize","marginTop","border","borderRadius","items","icon","_focus","padding","hasDivider","Navigation","Star","subItems","AtSign","navItems","isLazy","autoSelect","rightIcon","ChevronDown","alignSelf","textTransform","boxShadow","_active","_hover","Heading","Description","PersonalizeModal","left","flexDirection","minWidth","zIndex","right","cursor","flexWrap","label","onClickButton","marginLeft","borderColor","StyledBox","div","GameTitle","h3","GameGenre","GameRating","PopularGame","link","fallbackSrc","rating","StyledInput","Input","attrs","type","placeholder","Search","maxW","bgColor","pointerEvents","boxSize","styledIcon","css","StyledIconLeft","ChevronLeftIcon","StyledIconRight","ChevronRightIcon","PopularSection","shiftValue","setShiftValue","isSliderReady","setIsSliderReady","igdbContext","useContext","slideHandler","slidesContainer","slideWidth","offsetWidth","slideDirection","translateValue","style","setTimeout","shiftData","ShiftData","container","translate","slide","direction","copiedGame","updateSlides","transition","game","background_image","metacritic","MainHeading","h1","HeadingSpan","WelcomeSection","justifyContent","IoMdOptions","fontWeight","Label","input","Span","Checkbox","flexBasis","marginBottom","Check","defaultFocusValue","defaultActiveValue","defaultHoverValue","DefaultButton","kind","StyledHeader","header","Header","BsTwitch","Layout"],"mappings":"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","file":"static/js/main.3f4bf604.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {  axiosClient, responseBody } from \"../apiClient\";\n\nexport const fetchPopularGamesData = ((query: string) => {\n  return axiosClient.get(`/games${query}`).then(responseBody);\n});\n\nexport const fetchGameData = ((endpoint: string, query: string, ) => {\n  const fetchGameInfo = axiosClient.get(`/games/${endpoint}${query}`).then(responseBody);\n  const fetchGameScreenshots = axiosClient.get(`/games/${endpoint}/screenshots${query}`).then(responseBody);\n  const fetchGameSeries = axiosClient.get(`/games/${endpoint}/game-series${query}`).then(responseBody);\n\n  return axios.all([fetchGameInfo, fetchGameScreenshots, fetchGameSeries])\n});","import { extendTheme } from '@chakra-ui/react';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const theme = extendTheme({\n  colors: { white: \"var(--color-background)\" }\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    padding: 0;\n    margin: 0;\n    box-sizing: inherit;\n  }\n\n  html { font-size: 62.5%; } // 1rem = 10px \n  body { box-sizing: border-box; }\n  \n  :root {\n    // Measures\n    --default-slides-amount: 4;\n    --default-slides-spacing: .5rem;\n    --default-width: 1152px;\n    --main-page-padding: 1rem;\n    \n    --slide-width: calc(\n      (var(--default-width) - var(--main-page-padding) * 2) \n      / var(--default-slides-amount) - var(--default-slides-spacing) * 2\n    );\n\n    // GamePage component\n    --default-cover-image-width: 26rem;\n    --cover-image-spacing: 2rem;\n    --menu-button-width: 8rem;\n\n    // Colors\n    --color-primary: #323A45;\n    --color-background: #FAFAFA;\n    --color-white: #FFFFFF;\n    --color-white-2: #ECF0F1;\n    --color-black: #444;\n    --color-black-2: #555;\n    --color-grey: hsl(0, 0%, 90%);\n    --color-grey-2: #858585;\n    --color-grey-3: #ECECEC;\n    --color-grey-4: #34373b;\n    --color-grey-5: #BDC3C7;\n    --color-grey-6: #e6e6e6;\n    --color-grey-7: #bfbfbf;\n    --color-edit-bg: #f7f8fa;\n    --color-edit: #4E4E4E;\n    --color-accent: #9047FF;\n    --color-accent-2: #9147ff;\n    --color-accent-3: #f1c40f;\n    --color-accent-dark: #7214FF;\n    --color-accent-dark-2: #7314FF;\n    --color-accent-dark-3: #6000ef;\n    \n    // Fonts\n    --xsmall-font-size: 1.2rem;\n    --small-font-size: 1.4rem;\n    --default-font-size: 1.6rem;\n    --medium-font-size: 1.8rem;\n    --medium-font-size-2: 2rem;\n    --big-font-size: 2.4rem;\n    --xl-font-size: 2.8rem;\n    --game-heading-size: 6rem;\n    \n    // Animations\n    @keyframes appear { to { opacity: .5; } }\n    @keyframes hide { \n      from { opacity: .5; }\n      to { opacity: 0; } \n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { Fragment, Suspense } from 'react';\nimport GlobalStyle, { theme } from './styles/global';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Layout, MainPage } from './components';\nimport { Redirect, Route, Switch } from 'react-router';\n\nconst GamePageComponent = React.lazy(() => import('./components/GamePage/GamePage') );\n// const PublisherPageComponent = React.lazy(() => import('./components/PublisherPage/PublisherPage') );\n// const GenrePageComponent = React.lazy(() => import('./components/GenrePage/GenrePage') );\n// const PlatformPageComponent = React.lazy(() => import('./components/PlatformPage/PlatformPage') );\n// const SeriesPageComponent = React.lazy(() => import('./components/SeriesPage/SeriesPage') );\n\nexport const App: React.FC = () => {\n  const routes =\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route path=\"/discovery\" exact component={MainPage} />\n        <Route path=\"/games/:game\" exact component={GamePageComponent} />\n        {/* <Route path=\"/companies/:publisher\" exact component={PublisherPageComponent} /> */}\n        {/* <Route path=\"/genres/:genre\" exact component={GenrePageComponent} /> */}\n        {/* <Route path=\"/platforms/:platform\" exact component={PlatformPageComponent} /> */}\n        {/* <Route path=\"/games/:game/series\" exact component={SeriesPageComponent} /> */}\n        <Redirect to=\"/discovery\" />\n      </Switch>\n    </Suspense>\n  \n  return (\n    <Fragment>\n      <ChakraProvider theme={theme}>\n        <GlobalStyle />\n        <Layout>\n          {routes}\n        </Layout>\n      </ChakraProvider>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { IgdbContextProvider } from './store/IgdbContext';\n\nReactDOM.render(\n  <IgdbContextProvider>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </IgdbContextProvider>,\n  document.getElementById('root')\n);\n\n","import axios, { AxiosResponse } from \"axios\";\n\nconst apiKey = '6cb0dad0b2204442bfdfda2715ca7de1';\n\nexport const responseBody = (response: AxiosResponse) => response.data;\n\nexport const setQuery = (filter?: string) => {\n  const query = `?key=${apiKey}${filter ?? '' }`;\n  \n  return query;\n} \n\nexport const axiosClient = axios.create({\n  baseURL: 'https://api.rawg.io/api'\n});","import React, { useEffect, useState } from \"react\";\nimport { setQuery } from \"../network/apiClient\";\nimport { fetchPopularGamesData } from \"../network/lib/games\";\nimport { setHalfYearPeriodTimeString } from \"../shared/utility\";\nimport { Context } from \"./interfaces\";\n\nexport const IgdbContext = React.createContext<Context>({\n  games: [],\n  error: false,\n  setGames: () => {},\n  setError: () => {}\n});\n\nexport const IgdbContextProvider: React.FC = props => {\n  const [fetchedGames, setFetchedGames] = useState<any[]>([]);\n  const [isFetchingError, setIsFetchingError] = useState<boolean | string>(false);\n\n  const halfYearTimePeriod: string = setHalfYearPeriodTimeString();\n  const gamesAmountToFetch = 10;\n  const filterData = `&dates=${halfYearTimePeriod}&page_size=${gamesAmountToFetch}`;\n  const query: string = setQuery(filterData);\n  \n  useEffect(() => {\n    fetchPopularGamesData(query)\n    .then(response => {\n      const lastSixMonthsPopularGames = response.results;\n      const shuffledGames = lastSixMonthsPopularGames.sort((a: {}, b: {}) => .5 - Math.random());\n      const lastGame = shuffledGames.splice(-1, 1);\n      const updatedGames = [...lastGame, ...shuffledGames];\n\n      // console.log(lastSixMonthsPopularGames);\n      \n      setFetchedGames(updatedGames);\n    })\n    \n    .catch(error => {\n      const errorMessage: string = error.response.data.error;\n      \n      setIsFetchingError(errorMessage);\n    })\n  }, []);\n \n  const contextValue: Context = {\n    games: fetchedGames, \n    error: isFetchingError,\n    setGames: setFetchedGames,\n    setError: setIsFetchingError\n  };\n  \n  return <IgdbContext.Provider value={contextValue}>\n          {props.children}\n         </IgdbContext.Provider>;\n}","export const setHalfYearPeriodTimeString = () => {\n  const currentDate = new Date();\n\n  const [currentYear, currentMonth, currentDay] = [\n    currentDate.getFullYear(),\n    (`0${currentDate.getMonth() + 1}`).slice(-2),\n    (`0${currentDate.getDate()}`).slice(-2)\n  ];\n  \n  const sixMonthsAgoDay = currentDate.getDate() - 180;\n  const halfYearAgoDate = new Date(currentDate.setDate(sixMonthsAgoDay));\n  \n  const [halfYearAgoYear, halfYearAgoMonth, halfYearAgoDay] = [\n    halfYearAgoDate.getFullYear(),\n    (`0${halfYearAgoDate.getMonth() + 1}`).slice(-2),\n    (`0${halfYearAgoDate.getDate()}`).slice(-2)\n  ];\n\n  const halfYearTimePeriod = `${halfYearAgoYear}-${halfYearAgoMonth}-${halfYearAgoDay},${currentYear}-${currentMonth}-${currentDay}`;\n\n  return halfYearTimePeriod;\n}\n\nexport const getElapsedDaysSincePastDate = (pastDate: string, isRounded?: boolean) => {\n  const elapsedSeconds = Math.floor((new Date().getTime() - new Date(pastDate).getTime()) / 1000);\n  const elapsedMinutes = Math.floor(elapsedSeconds / 60);\n  const elapsedHours = Math.floor(elapsedMinutes / 60);\n  const elapsedDays = Math.floor(elapsedHours / 24);\n\n  return isRounded ? getRoundedDaysGone(elapsedDays) : elapsedDays;\n}\n\nconst getRoundedDaysGone = (daysGone: number) => {\n  if (daysGone < 30) return `${daysGone} ${daysGone === 1 ? 'day' : 'days'} ago`;\n  if (Math.round(daysGone / 30) === 1) return 'a month ago'; \n  return `${Math.round(daysGone / 30)} months ago`;\n} ","import { Box } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\n\nexport const StyledBackdrop = styled(Box)<{iswhite: boolean}>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  background-color: ${props => props.iswhite ? \"var(--color-white)}\" : \"var(--color-black)\"};\n  opacity: ${props => !props.iswhite && 0};\n  animation: ${props => !props.iswhite && \"appear .5s ease\"};\n  animation-fill-mode: forwards;\n  z-index: 20;\n\n  &.hide { animation: hide .5s ease; }\n`;","import React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { Props } from \"./interfaces\";\nimport { StyledBackdrop } from \"./styles\";\n\nconst animationTiming = {\n  enter: 500,\n  exit: 500\n};\n\nexport const Backdrop: React.FC<Props> = props => (\n  <CSSTransition\n    mountOnEnter\n    unmountOnExit\n    in={props.isVisible}\n    timeout={animationTiming}\n    classNames={{exitActive: 'hide'}}>\n    <StyledBackdrop\n      iswhite={props.iswhite}\n      onClick={props.onClickBackdrop} />\n  </CSSTransition>\n) ","import styled from \"styled-components\"\n\nexport const StyledFollowButton = styled.button`\n  width: 100%;\n  margin-top: 2rem;\n  padding: .7rem 0;\n  font-size: var(--small-font-size);\n  color: var(--color-white);\n  background: var(--color-accent-2);\n  border: 1px solid var(--color-accent-2);\n  border-radius: 4px;\n  \n  &:hover {\n    background: var(--color-accent-dark-2);\n    border-color: var(--color-accent-dark-2);\n  }\n\n  &:active {\n    background: var(--color-accent-dark-3);\n    border-color: var(--color-accent-dark-3);\n  }\n`;\n\nexport const StyledMenuButton = styled.button<{active?: boolean}>`\n  width: var(--menu-button-width);\n  font-size: var(--small-font-size);\n  font-weight: 700;\n  color: ${props => props.active ? \"var(--color-black)\" : \"var(--color-grey-2)\"};\n  padding: 1.7rem 0;\n  white-space: nowrap;\n  transition: color .3s;\n`;\n\nexport const StyledMenuUnderline = styled.span<{position: () => number}>`\n  position: absolute;\n  bottom: 0;\n  width: var(--menu-button-width);\n  height: 2px;\n  background: var(--color-accent-2);\n  transform: translateX(calc(${props => props.position} * var(--menu-button-width)));\n  transition: transform .3s;\n`;","import React, { useState } from \"react\"\nimport { ButtonGroup } from \"@chakra-ui/button\"\nimport { Image } from \"@chakra-ui/image\"\nimport { Box } from \"@chakra-ui/layout\"\nimport { Menu, Props } from \"./interfaces\"\nimport { StyledFollowButton, StyledMenuButton, StyledMenuUnderline } from \"./styles\"\nimport { About } from \"../..\"\n\nexport const Details: React.FC<Props> = props => {\n  const [isReadMoreClicked, setIsReadMoreClicked] = useState<boolean>(false);\n  const [menu, setMenu] = useState<Menu[]>([\n    {\n      name: \"About\",\n      status: true,\n      id: \"about\"\n    },\n    {\n      name: \"Add To\",\n      status: false,\n      id: \"add\"\n    },\n    {\n      name: \"Share\",\n      status: false,\n      id: \"share\"\n    }\n  ]);\n  \n  const onSwitchActiveButtonHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const id = e.currentTarget.getAttribute('id')!;\n    const menuCopy = [...menu];\n    \n    for (const item of menuCopy) {\n      item.status = false;\n      if (item.id === id) item.status = true;\n    }\n    \n    setMenu(menuCopy);\n  };\n  \n  const getActiveButtonPosition = () => {\n    let position = 0;\n    \n    for (const button of menu) {\n      if (button.status) break;\n      position += 1;  \n    }\n    \n    return position;\n  };\n\n  const readMoreClickHandler = () => setIsReadMoreClicked(true);\n  \n  const buttons = menu.map(button => (\n    <StyledMenuButton\n      key={button.id}\n      active={button.status}\n      id={button.id}\n      onClick={e => onSwitchActiveButtonHandler(e)}>{button.name}</StyledMenuButton>\n  ))\n\n  return (\n    <Box\n      position=\"relative\"\n      display=\"flex\"\n      w=\"var(--default-width)\"\n      m=\"0 auto 2rem\">\n      <Box\n        position=\"relative\"\n        top=\"-25rem\"\n        w=\"var(--default-cover-image-width)\"\n        marginRight=\"var(--cover-image-spacing)\">\n        <Image\n          w=\"100%\"\n          h=\"35rem\"\n          fit=\"cover\"\n          src={props.src} />\n        <StyledFollowButton>Follow</StyledFollowButton>\n      </Box>\n      \n      <Box flex=\"1\">\n        <Box bg=\"var(--color-white)\">\n          <ButtonGroup\n            position=\"relative\"\n            spacing=\"0px\"\n            variant=\"ghost\">\n            {buttons}\n            <StyledMenuUnderline position={getActiveButtonPosition} />\n          </ButtonGroup>\n        </Box>\n\n        {menu.map(item => {\n          let details;\n          \n          if (item.name === \"About\" && item.status) {\n            const trimmedDescription = `${props.description.substr(0, 430)}...`;\n\n            details = (\n              <About\n                key={item.id}\n                nameSlug={props.nameSlug}\n                genres={props.genres}\n                genreSlug={props.genreSlug}\n                platforms={props.platforms}\n                description={isReadMoreClicked ? props.description : trimmedDescription}\n                versions={props.versions}\n                readMore={isReadMoreClicked}\n                onReadMoreClick={readMoreClickHandler}\n                website={props.website}\n                reddit={props.reddit}  />\n            )\n          }\n\n          // if (item.name === \"Add To\" && item.status) return <AddTo />;\n          // return <Share />;\n          return details;\n        })}\n      </Box>\n    </Box>\n  );\n}","import Icon from \"@chakra-ui/icon\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledParagraph = styled.p`\n  font-size: var(--small-font-size);\n  margin-bottom: 1rem;\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 600;\n  color: var(--color-grey-4);\n`;\n\nexport const StyledLink = styled(Link)`\n  color: var(--color-accent-2);\n  border-bottom: 1px solid transparent;\n\n  &:hover { border-color: var(--color-accent-2); }\n`;\n\nexport const StyledReadMore = styled.button`\n  color: var(--color-accent-2);\n  font-weight: bold;\n`;\n\nexport const StyledIconLinkContainer = styled(Box)`\n  flex: 0 0 33.33%;\n`;\n\nexport const StyledIconLink = styled.a`\n  font-size: var(--small-font-size);\n  font-weight: 500;\n\n  &:hover span:last-child {\n    color: var(--color-accent-2);\n    border-bottom: 1px solid var(--color-accent-2);\n  }\n`;\n\nexport const StyledIconSpan = styled.span`\n  display: inline-block;\n  margin-right: 1rem;\n  padding: .2rem;\n  border-radius: 4px;\n  background-color: var(--color-accent-2);\n`;\n\nexport const StyledIcon = styled(Icon)`\n  display: inline-block;\n  font-size: 2.3rem;\n  color: var(--color-white);\n  line-height: 0;\n`;","import { Box, Flex } from \"@chakra-ui/react\";\nimport { AboutProps } from \"./interfaces\";\nimport { StyledIcon, StyledIconLink, StyledIconLinkContainer, StyledIconSpan, StyledLink, StyledParagraph, StyledReadMore, StyledSpan } from \"./styles\";\nimport { BiLinkExternal } from 'react-icons/bi';\nimport { FaRedditAlien } from 'react-icons/fa';\n\nexport const About: React.FC<AboutProps> = props => (\n  <Box>\n    <Box p=\"2rem 2rem 0 0\">\n      <StyledParagraph>\n        <StyledSpan>Genre: </StyledSpan>\n          {props.genres.map((genre, index, array) => \n            <StyledLink key={genre.id} to={`/genres/${props.genreSlug}`}>\n              {genre.name}{array.length - 1 === index || ', '}\n            </StyledLink>  \n          )}\n      </StyledParagraph>\n\n      <StyledParagraph>\n        <StyledSpan>Platforms: </StyledSpan>\n          {props.platforms.map((platform, index, array) => (\n            <StyledLink key={platform.platform.id} to={`/platforms/${platform.platform.slug}`}>\n              {platform.platform.name}{array.length - 1 === index || ', '}\n            </StyledLink>\n          ))}\n      </StyledParagraph>\n\n      {props.versions.length > 0 &&\n        <StyledParagraph>\n          <StyledSpan>Versions: </StyledSpan>\n          <StyledLink to={`/games/${props.nameSlug}/series`}>See {props.versions.length} more parts of this game</StyledLink>\n        </StyledParagraph>\n      }\n    </Box>\n\n    <Box>\n      <StyledParagraph>\n        {props.description}\n        {props.readMore \n          || <StyledReadMore onClick={props.onReadMoreClick}>Read More</StyledReadMore>}\n      </StyledParagraph>\n    </Box>\n\n    <Flex>\n      <StyledIconLinkContainer>\n        <StyledIconLink href={props.website}>\n          <StyledIconSpan>\n            <StyledIcon as={BiLinkExternal} />\n          </StyledIconSpan>\n          <span>\n            Official Website\n          </span>\n        </StyledIconLink>\n      </StyledIconLinkContainer>\n      {props.reddit &&\n        <StyledIconLinkContainer>\n          <StyledIconLink href={props.reddit}>\n            <StyledIconSpan>\n              <StyledIcon as={FaRedditAlien} />\n            </StyledIconSpan>\n            <span>\n              Subreddit\n            </span>\n          </StyledIconLink>\n        </StyledIconLinkContainer>\n      }\n    </Flex>\n  </Box>\n)","import { Box } from \"@chakra-ui/layout\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledHero = styled(Box)`\n  position: relative;\n  width: 100vw;\n  height: 47vh;\n  overflow: hidden;\n  background: linear-gradient(to bottom, var(--color-grey-3) 0%, var(--color-grey-3) 70%, var(--color-grey-5) 100%);\n`;\n\nexport const StyledGameInfo = styled(Box)`\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: var(--default-width);\n  margin-left: calc(var(--default-cover-image-width) + var(--cover-image-spacing));\n  color: var(--color-background);\n  font-weight: 600;\n`; \n\nexport const StyledHeading = styled.h2`\n  display: flex;\n  align-items: center;\n  font-size: var(--game-heading-size);\n  font-weight: bold;\n  color: var(--color-white);\n  `;\n\nexport const StyledEdit = styled.a`\n  font-size: var(--xsmall-font-size);\n  color: var(--color-edit);\n  background-color: var(--color-edit-bg);\n  margin-left: 2rem;\n  padding: .3rem .5rem;\n  border-radius: 2px;\n  opacity: .5;\n\n  &:hover { background-color: var(--color-grey-5); }\n`;\n\nexport const StyledReleasedDate = styled.p`\n  font-size: var(--big-font-size);\n  opacity: .8;\n`;\n\nexport const StyledPublisher = styled(Link)`\n  display: inline-block;\n  font-size: var(--medium-font-size);\n  font-style: italic;\n  margin: 2rem 0;\n  line-height: 1;\n  border-bottom: 1px solid transparent;\n  opacity: .8;\n\n  &:hover { border-color: var(--color-accent); }\n`;","import React, { Fragment, useState } from \"react\";\nimport { Image } from \"@chakra-ui/image\";\nimport { getElapsedDaysSincePastDate } from \"../../../shared/utility\";\nimport { Props } from \"./interfaces\";\nimport { StyledEdit, StyledGameInfo, StyledHeading, StyledHero, StyledPublisher, StyledReleasedDate } from \"./styles\";\nimport { Backdrop, TwitchModal } from \"../../\";\n\nexport const Hero: React.FC<Props> = React.memo(props => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const releaseDate = props.release;\n  const day = new Date(releaseDate).getDate();\n  const month = new Date(releaseDate).toLocaleString('default', { month: 'short' });\n  const year = new Date(releaseDate).getFullYear(); \n  const elapsedDays: string | number = getElapsedDaysSincePastDate(releaseDate, true);\n  \n  const transformedDate = `${day} ${month}, ${year} (${elapsedDays})`;\n\n  const toggleModalHandler = (e: React.MouseEvent) => {\n    e.preventDefault(); \n    setIsModalVisible(prevState => !prevState);\n  };\n\n  const backdrop = <Backdrop isVisible={isModalVisible} onClickBackdrop={e => toggleModalHandler(e)} />;\n  const twitchModal = <TwitchModal isVisible={isModalVisible} onCloseModal={e => toggleModalHandler(e)} />\n\n  return (\n    <Fragment>\n      {backdrop}\n      {twitchModal}\n      <StyledHero>\n        <Image\n          height=\"100%\"\n          width=\"100%\"\n          fit=\"cover\"\n          filter=\"blur(8px)\"\n          transform=\"scale(1.1)\"\n          src={props.src}\n          alt={props.alt} />\n        <StyledGameInfo>\n          <StyledHeading>\n            {props.title}\n            <StyledEdit \n              href=\"https://www.igdb.com/dialog/login\"\n              onClick={toggleModalHandler}>Edit</StyledEdit>\n          </StyledHeading>\n          <StyledReleasedDate>{transformedDate}</StyledReleasedDate>\n          <StyledPublisher to={`/companies/${props.publisherSlug}`}>{props.publisher}</StyledPublisher>\n        </StyledGameInfo>\n      </StyledHero>\n    </Fragment>\n  );\n})\n","import { Button } from \"@chakra-ui/button\";\nimport { Box } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\n\nexport const StyledTwitchBox = styled(Box)`\n  &&& { animation-fill-mode: forwards; }\n\n  position: absolute;\n  left: 50%;\n  font-size: var(--default-font-size);\n  font-weight: 700;\n  width: 70vh;\n  background-color: var(--color-background);\n  border-radius: 6px;\n  padding: .6rem;\n  z-index: 20;\n  \n  &.appear { animation: slideDown .5s ease; }\n  &.hide { animation: slideUp 1s ease; }\n  \n  @keyframes slideDown { \n    from { \n      opacity: 0;\n      transform: translate(-50%, -20rem);\n    } \n    \n    to {\n      opacity: 1;\n      transform: translate(-50%, 2.5rem);\n    } \n  }\n\n  @keyframes slideUp { \n    from { \n      opacity: 1;\n      transform: translate(-50%, 2.5rem);\n    } \n    \n    to {\n      opacity: 0;\n      transform: translate(-50%, -20rem);\n    } \n  }\n`;\n\nexport const StyledCloseButton = styled.button`\n  padding: 1rem;\n  line-height: 0;\n  cursor: pointer;\n  opacity: .5;\n  transition: opacity .3s;\n  backface-visibility: hidden;\n\n  &:hover { opacity: 1; }\n`;\n\nexport const StyledTwitchButton = styled(Button)`\n  && {\n    width: 100%; \n    background: var(--color-accent-2);\n    font-size: var(--default-font-size);\n    font-weight: 600;\n  }\n  \n  margin: 1rem 0 1.5rem;\n  padding: 2.7rem;\n  width: 100%;\n  color: var(--color-white);\n  animation-fill-mode: forwards;\n\n  &&:hover,\n  &:hover svg { \n    color: var(--color-white-2);\n    background-color: var(--color-accent-2);\n  }\n`;\n\n","import React from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { BsTwitch } from \"react-icons/bs\";\nimport { StyledCloseButton, StyledTwitchBox, StyledTwitchButton } from \"./styles\";\n\nconst animationTiming = {\n  enter: 500,\n  exit: 1000\n};\n\nexport const TwitchModal: React.FC<{onCloseModal: React.MouseEventHandler, isVisible: boolean}> = props => (\n  <CSSTransition\n    mountOnEnter\n    unmountOnExit\n    in={props.isVisible}\n    timeout={animationTiming}\n    classNames={{\n      enterActive: 'appear',\n      enterDone: 'appear',\n      exitActive: 'hide'}}>\n    <StyledTwitchBox>\n      <Flex \n        justify=\"space-between\" \n        align=\"center\">\n        <span>Log in to IGDB.com</span>\n        <StyledCloseButton onClick={props.onCloseModal}>\n          <CloseIcon w=\"1rem\" />\n        </StyledCloseButton>\n      </Flex>\n      <a href=\"https://www.igdb.com/oauth/twitch\">\n        <StyledTwitchButton \n          leftIcon={<BsTwitch />}>\n          Login or Create a Twitch Account      \n        </StyledTwitchButton>\n      </a>\n    </StyledTwitchBox>\n  </CSSTransition>\n) ","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 1rem 2rem;\n  color: var(--color-white);\n  font-size: 2rem;\n`;","import { Box } from '@chakra-ui/react';\nimport { StyledLink } from './styles';\n\nexport const Logo: React.FC = () => (\n    <Box >\n      <StyledLink to=\"/\">Logo</StyledLink>\n    </Box>\n)\n","import { Box } from \"@chakra-ui/react\";\nimport { WelcomeSection, PopularSection } from '../';\n\nexport const MainPage: React.FC = () => (\n  <Box \n    w=\"var(--default-width)\"\n    maxWidth=\"100%\"\n    m=\"auto\"\n    p=\"0 var(--main-page-padding)\">\n    <WelcomeSection />\n    <PopularSection />\n\n  </Box>\n)","import { Fragment } from \"react\";\nimport { MenuList, MenuItem, MenuDivider } from \"@chakra-ui/menu\";\nimport { Props } from \"./interfaces\";\n\nexport const NavigationSubItem: React.FC<Props> = props => (\n  <MenuList\n    bg=\"var(--color-accent)\"\n    color=\"var(--color-white)\"\n    fontSize=\"var(--default-font-size)\"\n    marginTop=\"-0.8rem\"\n    border=\"none\"\n    borderRadius=\"0\">\n    {\n      props.items.map(item => (\n        <Fragment key={item.name}>\n          <MenuItem \n          icon={item.icon}\n          _focus={{bg: \"var(--color-accent-dark)\"}}\n          padding=\"1rem 2rem\">\n          {item.name}</MenuItem>\n          {item.hasDivider && <MenuDivider />}\n        </Fragment>\n      ))\n    }\n  </MenuList>\n)","import { Fragment, useState } from 'react';\nimport { Menu, MenuButton } from '@chakra-ui/menu';\nimport { AtSignIcon, StarIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport { Button } from '@chakra-ui/button';\nimport { NavigationSubItem } from './NavigationSubItem';\n\nexport const Navigation: React.FC = () => {\n  const [navigationItems] = useState([\n      {\n        name: \"Games\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Discover\", icon: <AtSignIcon /> },\n          { name: \"Reviews\", icon: <AtSignIcon /> },\n          { name: \"Advanced Search\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Coming Soon\", icon: <AtSignIcon /> },\n          { name: \"Recently Released\", icon: <AtSignIcon /> },\n          { name: \"Top 100\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Add Game\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Database\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Games\", icon: <AtSignIcon /> },\n          { name: \"Platforms\",\n            icon: <AtSignIcon />,\n            hasDivider: true },\n          { name: \"Developer API\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Community\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"Karma Hunters\", icon: <AtSignIcon /> },\n          { name: \"Discord\", icon: <AtSignIcon /> }\n        ]\n      },\n      {\n        name: \"Help\",\n        icon: <StarIcon />,\n        subItems: [\n          { name: \"About IGDB\", icon: <AtSignIcon /> },\n          { name: \"Contributions\", icon: <AtSignIcon /> },\n          { name: \"UserVoice\", icon: <AtSignIcon /> },\n          { name: \"Contact\", icon: <AtSignIcon /> }\n        ]\n      }\n    ]);\n\n  const navItems = navigationItems.map( item => \n    <Fragment key={item.name}>\n      <Menu isLazy autoSelect={false}>\n        <MenuButton\n            as={Button}\n            leftIcon={item.icon}\n            rightIcon={<ChevronDownIcon />}\n            variant=\"flushed\"\n            alignSelf=\"stretch\"\n            height=\"auto\"\n            color=\"var(--color-white)\"\n            fontSize=\"var(--xsmall-font-size)\"\n            textTransform=\"uppercase\"\n            borderRadius=\"0\"\n            p=\"0 1.5rem\"\n            _focus={{boxShadow: \"none\"}}\n            _active={{\n              color: \"var(--color-white)\",\n              bg: \"var(--color-accent)\",\n              boxShadow: \"none\"}}\n            _hover={{color: \"#7214FF\"}}>\n            {item.name}\n        </MenuButton>\n        <NavigationSubItem items={item.subItems} />\n      </Menu>\n    </Fragment>\n  )\n\n  return (\n    <Fragment>\n      {navItems}\n    </Fragment>\n  );\n}","import styled from \"styled-components\";\nimport { StyledComponentsProps } from \"./interfaces\";\n\nexport const Heading = styled.h2`\n  font-size: var(--big-font-size);\n  font-weight: 500;\n`;\n\nexport const Description = styled.p`\n  margin: 2.5rem 0;\n  font-size: ${(props: StyledComponentsProps) => props.fontSize || \"var(--medium-font-size)\"};\n  font-weight: 300;\n  color: ${(props: StyledComponentsProps) => props.color || \"var(--color-grey-2)\"};\n`;","import { Fragment, useState } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/layout\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { Backdrop, Checkbox, DefaultButton } from \"../\";\nimport { Description, Heading } from \"./styles\";\n\nexport const PersonalizeModal: React.FC<{onCloseModal: () => void, isVisible: boolean}> = props => {\n  const [platforms] = useState([\n    'PC (Microsoft Windows)',\n    'Xbox One',\n    'PlayStation 4',\n    'Nintendo Switch',\n    'Mac',\n    'Linux',\n    'iOS',\n    'Android',\n    'Nintendo 3DS',\n    'Playstation Vita'\n  ]);\n\n  return (\n    <Fragment>\n      <Backdrop \n        isVisible={props.isVisible}\n        iswhite\n        onClickBackdrop={props.onCloseModal} />\n      <Flex\n        position=\"absolute\"\n        top=\"50vh\"\n        left=\"50vw\"\n        flexDirection=\"column\"\n        transform=\"translate(-50%, -50%)\"\n        minWidth=\"90rem\"\n        zIndex=\"20\">\n        <Box>\n          <Heading>Personalize</Heading>\n          <CloseIcon \n            position=\"absolute\"\n            top=\"0\"\n            right=\"0\"\n            w=\"3.5rem\"\n            h=\"3.5rem\"\n            padding=\".5rem\"\n            cursor=\"pointer\"\n            borderRadius=\"50%\"             \n            _hover={{bg: \"var(--color-grey-3)\"}}\n            \n            onClick={props.onCloseModal} />\n          <Description>Select what you want to see on your homepage</Description>\n        </Box>\n        <Box>\n          <Description\n            fontSize=\"var(--default-font-size)\"\n            color=\"var(color-grey-4)\">Platforms you own:</Description>\n          <Flex\n            flexWrap=\"wrap\">\n            {platforms.map(platform => (\n              <Checkbox key={platform} label={platform} />\n            ))}            \n          </Flex>\n          <Flex marginTop=\"1rem\">\n          <DefaultButton\n              p=\"1.3rem 4rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-grey-2)\"\n              bg=\"var(--color-white)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-grey-6)\"}}\n              _active={{bg: \"var(--color-grey-6)\"}}\n              _hover={{bg: \"var(--color-grey-6)\"}}\n              onClickButton={props.onCloseModal}>\n              Cancel\n            </DefaultButton>\n            <DefaultButton\n              p=\"1.3rem 4rem\"\n              marginLeft=\".5rem\"\n              fontSize=\"var(--default-font-size)\"\n              color=\"var(--color-white)\"\n              bg=\"var(--color-accent-2)\"\n              border=\"2px solid var(--color-accent-2)\"\n              borderRadius=\"3px\"\n              _focus={{bg: \"var(--color-accent-dark)\"}}\n              _active={{bg: \"var(--color-accent-dark)\"}}\n              _hover={{bg: \"var(--color-accent-dark)\",\n                       borderColor: \"var(--color-accent-dark)\"}}\n              onClickButton={props.onCloseModal}>\n              Save\n            </DefaultButton>\n          </Flex>\n        </Box>\n      </Flex>\n    </Fragment>\n  );\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  flex: 1 0 var(--slide-width);\n\n  && { margin: 0 var(--default-slides-spacing); }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, rgba(145,71,255,0.9), rgba(43,187,228,0.9));\n  }\n  \n  &:hover::after,\n  &:hover span { display: block; }\n  `;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  top: 15%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: none;\n  color: var(--color-white);\n  font-size: var(--xl-font-size);\n  z-index: 1;\n  `;\n  \n  export const GameTitle = styled.h3`\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: var(--small-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n    margin-bottom: 2px;\n  `;\n  \n  export const GameGenre = styled.span`\n    font-size: var(--xsmall-font-size);\n    color: var(--color-grey-7);\n  `;\n  \n  export const GameRating = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    font-size: var(--default-font-size);\n    font-weight: 600;\n    color: var(--color-black-2);\n  `;\n","import { Image } from \"@chakra-ui/image\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Props } from \"./interfaces\";\nimport { GameGenre, GameRating, GameTitle, StyledBox, StyledLink, StyledSpan } from \"./styles\";\n\nexport const PopularGame: React.FC<Props> = props => (\n  <StyledLink to={props.link}>\n    <StyledBox>\n      <StyledSpan>Read<br/>More</StyledSpan>\n      <Image\n        fallbackSrc=\"https://via.placeholder.com/200\"\n        height=\"15rem\"\n        width=\"100%\"\n        fit=\"cover\"\n        src={props.src}\n        alt={props.alt} />\n\n      <Box\n        position=\"relative\"\n        width=\"var(--slide-width)\"\n        bg=\"var(--color-white)\"\n        p=\"1rem\"\n        border=\"1px solid var(--color-grey-3)\"\n        zIndex=\"10\">\n        <GameTitle>{props.title}</GameTitle>\n        <GameGenre>{props.genre}</GameGenre>\n        <GameRating>{props.rating || 0}%</GameRating>\n      </Box>\n    </StyledBox>\n  </StyledLink>\n)\n","import { Input } from '@chakra-ui/input';\nimport styled from 'styled-components';\n\nexport const StyledInput = styled(Input).attrs({\n  type: \"text\",\n  placeholder: \"Search\"\n})`\n  && {\n    font-size: var(--medium-font-size);\n    padding: 1.5rem;\n  \n    &:focus {\n      border-color: transparent;\n      box-shadow: none;\n      background-color: var(--color-white);\n    }\n  }\n`;","import { InputGroup, InputRightAddon } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport { StyledInput } from './styles';\n\nexport const Search: React.FC = () => (\n  <InputGroup maxW=\"28rem\">\n    <StyledInput bgColor=\"var(--color-grey)\" />\n    <InputRightAddon\n      pointerEvents=\"none\"\n      p=\"1.5rem\" \n      children={<SearchIcon boxSize=\"1.5rem\"/>} />\n  </InputGroup>\n)","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport styled, { css } from \"styled-components\";\n\nexport const Heading = styled.h2`\n  position: relative;\n  font-size: var(--default-font-size);\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin: 2rem 0;\n  text-transform: uppercase;\n  z-index: -10;\n\n  :before {\n    position: absolute;\n    bottom: -1rem;\n    left: 0;\n    content: '';\n    width: 5rem;\n    height: 2px;\n    background-color: var(--color-accent-3);\n  }\n`;\n\nexport const StyledBox = styled.div`\n  position: relative;\n  display: flex;\n  overflow: hidden;\n`;\n\nexport const StyledSpan = styled.span<{id: string}>`\n  position: absolute;\n  top: 0;\n  left: ${props => props.id === 'left' && \"var(--default-slides-spacing)\"};\n  right: ${props => props.id === 'right' && \"var(--default-slides-spacing)\"};\n  height: 100%;\n  cursor: pointer;\n  z-index: 11;\n\n  &:hover svg {\n    background-color: var(--color-white);\n    color: var(--color-black);\n  }\n`;\n\nconst styledIcon = css`\n  && { color: white; }\n    \n    position: relative;\n    top: 25%;\n    background-color: rgba(0, 0, 0, 0.6);\n    font-size: 4rem;\n`;\n\nexport const StyledIconLeft = styled(ChevronLeftIcon)`\n  ${styledIcon}\n`;\n\nexport const StyledIconRight = styled(ChevronRightIcon)`\n  ${styledIcon}\n`;","import { Box, HStack } from \"@chakra-ui/layout\";\nimport { useContext, useState } from \"react\";\nimport { IgdbContext } from \"../../../store/IgdbContext\";\nimport { PopularGame } from \"../../\";\nimport { ShiftData } from \"./interfaces\";\nimport { Heading, StyledBox, StyledIconLeft, StyledIconRight, StyledSpan } from \"./styles\";\n\nexport const PopularSection: React.FC = () => {\n  const [shiftValue, setShiftValue] = useState(0);\n  const [isSliderReady, setIsSliderReady] = useState(true);\n\n  const igdbContext = useContext(IgdbContext);\n  const fetchedGames = [...igdbContext.games];\n\n  const shiftSlidesContainer = (shiftData: ShiftData) => shiftData.container.style.left=`${shiftData.translate * -1 - shiftData.slide}px`;\n\n  const updateSlides = (direction: string) => {\n    let updatedGames: {}[] = [];\n    const copiedGame = direction === 'left'\n      ? fetchedGames.splice(-1, 1)\n      : fetchedGames.splice(0, 1);\n\n    updatedGames = direction === 'left'\n      ? [...copiedGame, ...fetchedGames]\n      : [...fetchedGames, ...copiedGame];\n      \n      igdbContext.setGames(updatedGames);\n    }\n    \n  const slideHandler = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    if (!isSliderReady) return;\n    setIsSliderReady(false);\n    \n    const slidesContainer = document.getElementById('slides_container')!;\n    const slideWidth = slidesContainer?.offsetWidth / fetchedGames.length;\n    const slideDirection= e.currentTarget.getAttribute('id')!;\n    \n    const translateValue = slideDirection === 'left'\n    ? shiftValue + slideWidth\n    : shiftValue - slideWidth;\n    \n    slidesContainer.style.transform=`translateX(${translateValue}px)`;\n    setShiftValue(translateValue);\n    \n    setTimeout(() => {\n      const ShiftData = {\n        container: slidesContainer,\n        translate: translateValue,\n        slide: slideWidth\n      }\n      \n      updateSlides(slideDirection);\n      shiftSlidesContainer(ShiftData);\n      setIsSliderReady(true);\n    }, 500)\n  }\n\n  return (\n    <Box>\n      <Heading>Popular games right now</Heading>\n      <StyledBox>\n        <StyledSpan id=\"left\" onClick={(e) => slideHandler(e)}>\n          <StyledIconLeft />\n        </StyledSpan>\n        <StyledSpan id=\"right\" onClick={(e) => slideHandler(e)}>\n          <StyledIconRight />\n        </StyledSpan>\n        <HStack\n            left=\"calc(var(--slide-width) * -1 - var(--default-slides-spacing) * 2)\"\n            id=\"slides_container\"\n            position=\"relative\"\n            transition=\"transform .5s ease\"\n            direction=\"row\"\n            spacing=\"0\">\n            {igdbContext.games.map(game => (\n              <PopularGame\n                key={game.id}\n                link={`games/${game.slug}`}\n                src={game.background_image}\n                alt={game.name}\n                title={game.name}\n                genre={game.genres[0].name}\n                rating={game.metacritic} />\n            ))}\n          </HStack>\n      </StyledBox>\n    </Box>\n  );\n}","import styled from \"styled-components\";\n\nexport const MainHeading = styled.h1`\n  font-size: var(--big-font-size);\n`;\n\nexport const HeadingSpan = styled.span`\n  font-style: italic;\n`;","import { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport Icon from \"@chakra-ui/icon\";\nimport { IoMdOptions } from 'react-icons/io';\nimport { PersonalizeModal } from \"../../\";\nimport { HeadingSpan, MainHeading } from \"./styles\";\n\nexport const WelcomeSection: React.FC = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const toggleModalHandler = () => setIsModalVisible(prevState => !prevState);\n\n  return (\n    <Flex\n      justifyContent=\"space-between\"\n      padding=\"2rem 0\">\n      <MainHeading>\n        Welcome to the guiding star in <HeadingSpan>your </HeadingSpan>\n        world of gaming\n      </MainHeading>\n      <Button\n        rightIcon={<Icon as={IoMdOptions}\n        color=\"var(--color-accent-dark)\" />}\n        padding=\"3rem 0\"\n        marginTop=\"-1.3rem\"\n        fontSize=\"var(--medium-font-size-2)\"\n        fontWeight=\"300\"\n        bg=\"var(--color-background)\"\n        color=\"var(--color-grey-2)\"\n        cursor=\"pointer\"\n        _focus={{boxShadow: \"none\"}}\n        _active={{bg: \"transparent\"}}\n        _hover={{bg: \"transparent\"}}\n        \n        onClick={toggleModalHandler}>\n        Personalize\n      </Button>\n      {isModalVisible && <PersonalizeModal\n                            isVisible={isModalVisible}\n                            onCloseModal={toggleModalHandler} />}\n    </Flex>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  color: var(--color-black);\n  font-size: var(--small-font-size);\n  font-weight: 700;\n\n  &:hover > span { background-color: var(--color-grey-5); }\n`;\n\nexport const Input = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n\n  &:checked + span {\n    background-color: var(--color-accent-2);\n    border-color: var(--color-accent-2);\n  }\n`;\n\nexport const Span = styled.span`\n  position: relative;\n  margin-right: 1rem;\n  width: 2rem;\n  height: 2rem;\n  border: 2px solid var(--color-grey-5);\n  border-radius: 13%;\n`;","import { Box } from \"@chakra-ui/react\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport { Label, Input, Span } from \"./styles\";\n\nexport const Checkbox: React.FC<{label: string}> = props => (\n  <Box\n    position=\"relative\"\n    flexBasis=\"50%\"\n    marginBottom=\"1rem\">\n    <Label>\n      <Input />\n      <Span>\n        <CheckIcon \n          position=\"absolute\"  \n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\" \n          width=\"1.7rem\"\n          height=\"1.7rem\"\n          color=\"var(--color-white)\" />\n      </Span>\n      {props.label}\n      </Label>\n  </Box>\n)","import { Button } from \"@chakra-ui/button\";\nimport { Props } from \"./interfaces\";\n\nconst defaultFocusValue = {boxShadow: \"none\"};\nconst defaultActiveValue = {bg: \"var(--color-accent-dark)\"};\nconst defaultHoverValue = {bg: \"var(--color-accent-dark)\"};\n\nexport const DefaultButton: React.FC<Props> = props => (\n  <Button\n    alignSelf=\"stretch\"\n    p={props.p || \"auto\"}\n    marginLeft={props.marginLeft || \"auto\"}\n    height=\"auto\"\n    cursor=\"pointer\"\n    borderRadius={props.borderRadius || \"0\"}\n    bg={props.bg || \"var(--color-accent)\"}\n    border={props.border || \"none\"}\n    color={props.color || \"var(--color-white)\"}\n    fontSize={props.fontSize || \"var(--xsmall-font-size)\"}\n    href={props.link}\n    _focus={props._focus || defaultFocusValue}\n    _active={props._active || defaultActiveValue}\n    _hover={props._hover || defaultHoverValue}\n\n    as={props.kind}\n    leftIcon={props.leftIcon}\n    onClick={props.onClickButton}>\n    {props.children}\n  </Button>\n)","import { Box } from '@chakra-ui/layout';\nimport styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  background-color: var(--color-primary);\n`;\n\nexport const StyledBox = styled(Box)`\n  width: var(--default-width);\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  margin: auto;\n`;\n","import { DefaultButton, Logo, Navigation, Search } from '../../components';\nimport { Icon } from '@chakra-ui/icon';\nimport { BsTwitch } from 'react-icons/bs';\nimport { StyledBox, StyledHeader } from './styles';\n\nexport const Header: React.FC = () => (\n  <StyledHeader>\n    <StyledBox>\n      <Logo />\n      <Search />\n      <Navigation />\n      <DefaultButton\n        kind=\"a\"\n        leftIcon={<Icon as={BsTwitch} />}\n        link=\"https://www.igdb.com/oauth/twitch\">\n        LOGIN WITH TWITCH</DefaultButton>\n    </StyledBox>\n  </StyledHeader>\n)","import { Fragment } from 'react';\nimport { Header } from '../../components';\n    \nexport const Layout: React.FC = props => (\n  <Fragment>\n    <Header />\n    {props.children}\n  </Fragment>\n)"],"sourceRoot":""}